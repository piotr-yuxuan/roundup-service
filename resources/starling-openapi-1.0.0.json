{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Starling Bank API",
    "description" : "OpenAPI specification for the Starling Bank Public API.\n\nFor more information visit: https://developer.starlingbank.com/docs",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "paths" : {
    "/api/v2/accounts/{accountUid}/statement/available-periods" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get list of statement periods which are available for an account",
        "operationId" : "availablePeriods",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountStatementPeriods"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "statement-csv:read", "statement-pdf:read" ]
        } ]
      }
    },
    "/api/v2/accounts/{accountUid}/statement/download" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Download a statement for a given statement period",
        "description" : "To choose a file format, set the Accept header to either 'application/pdf' or 'text/csv'",
        "operationId" : "downloadPDFStatement",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "yearMonth",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "2023-01"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary",
                  "example" : "RGF0ZSxDb3VudGVyIFBhcnR5LFJlZmVyZW5jZSxUeXBlLEFtb3VudCAoR0JQKSxCYWxhbmNlIChHQlApLFNwZW5kaW5nIENhdGVnb3J5CjAxLzAzLzIwMjAsU3RhcmxpbmcgQmFuayxGZWJydWFyeSBJbnRlcmVzdCBFYXJuZWQsREVQT1NJVCBJTlRFUkVTVCwxLjIzLDc2NS4zMyxJTkNPTUUKMDIvMDMvMjAyMCxTdGFnZWNvYWNoLFNUR0NPQUNIL0NUWUxJTksgICAgICAgQlVTIFRJQ0tFVCAgICBHQlIsR09PR0xFIFBBWSwtNC4zMCw3NjEuMDMsVFJBTlNQT1JU"
                }
              },
              "application/pdf" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "statement-pdf:read" ]
        } ]
      }
    },
    "/api/v2/accounts/{accountUid}/statement/downloadForDateRange" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Download a statement for a given date range",
        "description" : "To choose a file format, set the Accept header to either 'application/pdf' or 'text/csv'",
        "operationId" : "downloadPDFStatementForDateRange",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-01-01"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-01-01"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary",
                  "example" : "RGF0ZSxDb3VudGVyIFBhcnR5LFJlZmVyZW5jZSxUeXBlLEFtb3VudCAoR0JQKSxCYWxhbmNlIChHQlApLFNwZW5kaW5nIENhdGVnb3J5CjAxLzAzLzIwMjAsU3RhcmxpbmcgQmFuayxGZWJydWFyeSBJbnRlcmVzdCBFYXJuZWQsREVQT1NJVCBJTlRFUkVTVCwxLjIzLDc2NS4zMyxJTkNPTUUKMDIvMDMvMjAyMCxTdGFnZWNvYWNoLFNUR0NPQUNIL0NUWUxJTksgICAgICAgQlVTIFRJQ0tFVCAgICBHQlIsR09PR0xFIFBBWSwtNC4zMCw3NjEuMDMsVFJBTlNQT1JU"
                }
              },
              "application/pdf" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "statement-pdf:read" ]
        } ]
      }
    },
    "/api/v2/accounts/{accountUid}/balance" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get an account's balance",
        "description" : "The account balance is expressed in two ways: cleared balance and effective balance.\n* The **cleared balance** is the balance of settled transactions and so does not include pending transactions. The cleared end of day balance is used to calculate interest.\n* The **effective balance** is the balance of settled and pending outgoing transactions. This is the balance most commonly presented to the account holder (e.g. in-app).\n\n`clearedBalance` and `effectiveBalance` hold the values for the main account only, excluding balances in spaces, savings goals etc. `totalClearedBalance` and `totalEffectiveBalance` hold the corresponding values totalled across the main account and all spaces, savings goals etc.\n\nMany payment types settle almost instantly (e.g. faster payments). Card transactions usually take a few days to settle and will remain pending for this time. We've got a blog post on [how card transactions work](https://www.starlingbank.com/blog/card-transactions-explained/).\n\nTo check whether the account has enough money to make a payment, use the confirmation of funds endpoint instead.",
        "operationId" : "getAccountBalance",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BalanceV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "balance:read" ]
        } ]
      }
    },
    "/api/v2/accounts/{accountUid}/identifiers" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get an account's bank identifiers",
        "description" : "Identifiers come in pairs:\n\n* A bank identifier, which identifies the bank\n* An account identifier, which identifiers the account at the bank\n\nIdentifiers can be:\n* Sort code and account number for domestic UK payments\n* BIC and IBAN for international payments\n* ABA and ACH routing numbers for domestic US payments",
        "operationId" : "getAccountIdentifiers",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountIdentifiers"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "account-identifier:read" ]
        } ]
      }
    },
    "/api/v2/accounts" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get the accounts associated with an account holder",
        "description" : "This endpoint returns a list of the accounts that you can access using the access token you supplied in the request header.\n\nEach access token is associated with a single account holder, who may have more than one account (for example, a GBP account and a euro account). This endpoint returns all the accounts that the account holder has given you permission to access.\n\nNote that an account holder in this context is either a personal account holder, or a sole trader account holder, or a business account holder or a joint account holder. An individual person may be more than one of these kinds of account holder, but each kind of account holder is a separate entity and hence requires a separate access token and permission.\n\nCategories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.",
        "operationId" : "getAccounts",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accounts"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "account:read", "account-list:read" ]
        } ]
      }
    },
    "/api/v2/accounts/{accountUid}/confirmation-of-funds" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get whether there are available funds for a requested amount",
        "operationId" : "getConfirmationOfFunds",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "targetAmountInMinorUnits",
          "in" : "query",
          "description" : "Target amount in minor units",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfirmationOfFundsResponse"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "confirmation-of-funds:read" ]
        } ]
      }
    },
    "/api/v2/account-holder/business" : {
      "get" : {
        "tags" : [ "Businesses" ],
        "summary" : "Get a business account holder's details",
        "operationId" : "getBusiness",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Business"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "account:read" ]
        } ]
      }
    },
    "/api/v2/account-holder/business/correspondence-address" : {
      "get" : {
        "tags" : [ "Businesses" ],
        "summary" : "Get a company's correspondence address",
        "description" : "Will fallback to registered address if not available",
        "operationId" : "getCorrespondenceAddress",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "address:read" ]
        } ]
      }
    },
    "/api/v2/account-holder/business/registered-address" : {
      "get" : {
        "tags" : [ "Businesses" ],
        "summary" : "Get a company's registered address",
        "operationId" : "getRegisteredAddress",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "address:read" ]
        } ]
      }
    },
    "/api/v2/account-holder/individual" : {
      "get" : {
        "tags" : [ "Individuals and Sole Traders" ],
        "summary" : "Get an individual account holder's details",
        "operationId" : "getIndividual",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Individual"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "customer:read" ]
        } ]
      }
    },
    "/api/v2/account-holder/individual/email" : {
      "put" : {
        "tags" : [ "Individuals and Sole Traders" ],
        "summary" : "Update an individual account holder's email address",
        "operationId" : "updateEmail",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateEmailRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "BearerAndSignature" : [ "email:edit" ]
        } ]
      }
    },
    "/api/v2/account-holder/joint" : {
      "get" : {
        "tags" : [ "Joint Accounts" ],
        "summary" : "Get a joint account holder's details",
        "operationId" : "getJointAccount",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JointAccount"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "customer:read" ]
        } ]
      }
    },
    "/api/v2/account-holder/sole-trader" : {
      "get" : {
        "tags" : [ "Sole Traders" ],
        "summary" : "Get sole trader business details",
        "operationId" : "getSoleTrader",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SoleTrader"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "account:read" ]
        } ]
      }
    },
    "/api/v2/accounts/{accountUid}/spending-insights/counter-party" : {
      "get" : {
        "tags" : [ "Spending Insights" ],
        "summary" : "Get the spending insights grouped by counter party",
        "operationId" : "querySpendingInsightsByCounterparty",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "year",
          "in" : "query",
          "description" : "Year",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "2023"
          }
        }, {
          "name" : "month",
          "in" : "query",
          "description" : "Month",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER" ]
          }
        }, {
          "name" : "summaryStartPeriodInclusive",
          "in" : "query",
          "description" : "summaryStartPeriodInclusive",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "summaryEndPeriodExclusive",
          "in" : "query",
          "description" : "summaryEndPeriodExclusive",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpendingCounterPartySummary"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "transaction:read" ]
        } ]
      }
    },
    "/api/v2/accounts/{accountUid}/spending-insights/spending-category" : {
      "get" : {
        "tags" : [ "Spending Insights" ],
        "summary" : "Get the spending insights grouped by spending category",
        "operationId" : "querySpendingInsightsBySpendingCategory",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "year",
          "in" : "query",
          "description" : "Year",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "2023"
          }
        }, {
          "name" : "month",
          "in" : "query",
          "description" : "Month",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER" ]
          }
        }, {
          "name" : "summaryStartPeriodInclusive",
          "in" : "query",
          "description" : "summaryStartPeriodInclusive",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "summaryEndPeriodExclusive",
          "in" : "query",
          "description" : "summaryEndPeriodExclusive",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpendingCategorySummary"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "transaction:read" ]
        } ]
      }
    },
    "/api/v2/account-holder" : {
      "get" : {
        "tags" : [ "Account Holders" ],
        "summary" : "Get basic information about the account holder",
        "operationId" : "getAccountHolder",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountHolder"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "customer:read", "account-holder-type:read" ]
        } ]
      }
    },
    "/api/v2/account-holder/name" : {
      "get" : {
        "tags" : [ "Account Holders" ],
        "summary" : "Get the name of the account holder",
        "operationId" : "getAccountHolderName",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountHolderName"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "account-holder-name:read" ]
        } ]
      }
    },
    "/api/v2/account-holder/{accountHolderUid}/profile-image" : {
      "get" : {
        "tags" : [ "Profile images" ],
        "summary" : "Get a profile image if one exists",
        "operationId" : "downloadProfileImage",
        "parameters" : [ {
          "name" : "accountHolderUid",
          "in" : "path",
          "description" : "Unique identifier of an account holder",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "image/*" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "profile-image:read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Profile images" ],
        "summary" : "Update a profile image if one already exists",
        "operationId" : "updateProfileImage",
        "parameters" : [ {
          "name" : "accountHolderUid",
          "in" : "path",
          "description" : "Unique identifier of an account holder",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "image/jpeg"
        } ],
        "requestBody" : {
          "description" : "Attachment input stream",
          "content" : {
            "image/*" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "profile-image:edit" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Profile images" ],
        "summary" : "Delete a profile image if one exists",
        "operationId" : "deleteProfileImage",
        "parameters" : [ {
          "name" : "accountHolderUid",
          "in" : "path",
          "description" : "Unique identifier of an account holder",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "profile-image:edit" ]
        } ]
      }
    },
    "/api/v2/addresses" : {
      "get" : {
        "tags" : [ "Addresses" ],
        "summary" : "Get the account holder's addresses",
        "operationId" : "getAddresses",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressesV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "address:read" ]
        } ]
      },
      "post" : {
        "tags" : [ "Addresses" ],
        "summary" : "Update the account holder's current address",
        "operationId" : "updateCurrentAddress",
        "requestBody" : {
          "description" : "Update account holder's current address",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "BearerAndSignature" : [ "address:edit" ]
        } ]
      }
    },
    "/api/v2/cards/{cardUid}/controls/atm-enabled" : {
      "put" : {
        "tags" : [ "Cards" ],
        "summary" : "Update ATM withdrawal control",
        "operationId" : "enableAtm",
        "parameters" : [ {
          "name" : "cardUid",
          "in" : "path",
          "description" : "Card uid of the targeted card",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Whether ATM withdrawals should be allowed. Set to false to block, true to allow.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Enabling"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "card-control:edit" ]
        } ]
      }
    },
    "/api/v2/cards/{cardUid}/controls/enabled" : {
      "put" : {
        "tags" : [ "Cards" ],
        "summary" : "Update card lock",
        "operationId" : "enableCard",
        "parameters" : [ {
          "name" : "cardUid",
          "in" : "path",
          "description" : "Card uid of the targeted card",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Whether the card should be locked. Set to false to lock, true to unlock.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Enabling"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "card-control:edit" ]
        } ]
      }
    },
    "/api/v2/cards/{cardUid}/controls/currency-switch" : {
      "put" : {
        "tags" : [ "Cards" ],
        "summary" : "Update currency switch payments control",
        "operationId" : "enableCurrencySwitch",
        "parameters" : [ {
          "name" : "cardUid",
          "in" : "path",
          "description" : "Card uid of the targeted card",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Whether currency switch payments should be allowed for a given currency. Set to false to block, true to allow.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CurrencyFlag"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "card-control:edit" ]
        } ]
      }
    },
    "/api/v2/cards/{cardUid}/controls/gambling-enabled" : {
      "put" : {
        "tags" : [ "Cards" ],
        "summary" : "Update gambling payments control",
        "operationId" : "enableGamblingPayments",
        "parameters" : [ {
          "name" : "cardUid",
          "in" : "path",
          "description" : "Card uid of the targeted card",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Whether gambling payments should be allowed. Set to false to block, true to allow.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Enabling"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "card-control:edit" ]
        } ]
      }
    },
    "/api/v2/cards/{cardUid}/controls/mag-stripe-enabled" : {
      "put" : {
        "tags" : [ "Cards" ],
        "summary" : "Update magstripe payments control",
        "operationId" : "enableMagStripePayment",
        "parameters" : [ {
          "name" : "cardUid",
          "in" : "path",
          "description" : "Card uid of the targeted card",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Whether magstripe payments should be allowed. Set to false to block, true to allow.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Enabling"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "card-control:edit" ]
        } ]
      }
    },
    "/api/v2/cards/{cardUid}/controls/mobile-wallet-enabled" : {
      "put" : {
        "tags" : [ "Cards" ],
        "summary" : "Update mobile wallet payments control",
        "operationId" : "enableMobileWallet",
        "parameters" : [ {
          "name" : "cardUid",
          "in" : "path",
          "description" : "Card uid of the targeted card",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Whether mobile wallet payments should be allowed. Set to false to block, true to allow.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Enabling"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "card-control:edit" ]
        } ]
      }
    },
    "/api/v2/cards/{cardUid}/controls/online-enabled" : {
      "put" : {
        "tags" : [ "Cards" ],
        "summary" : "Update online payments control",
        "operationId" : "enableOnlinePayments",
        "parameters" : [ {
          "name" : "cardUid",
          "in" : "path",
          "description" : "Card uid of the targeted card",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Whether online payments should be allowed. Set to false to block, true to allow.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Enabling"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "card-control:edit" ]
        } ]
      }
    },
    "/api/v2/cards/{cardUid}/controls/pos-enabled" : {
      "put" : {
        "tags" : [ "Cards" ],
        "summary" : "Update card present payments (contactless and chip and pin) control",
        "operationId" : "enablePos",
        "parameters" : [ {
          "name" : "cardUid",
          "in" : "path",
          "description" : "Card uid of the targeted card",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Whether card present payments (contactless and chip and pin) should be allowed. Set to false to block, true to allow.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Enabling"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "card-control:edit" ]
        } ]
      }
    },
    "/api/v2/cards" : {
      "get" : {
        "tags" : [ "Cards" ],
        "summary" : "Get all the cards for an account holder",
        "operationId" : "listCards",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Cards"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "card:read" ]
        } ]
      }
    },
    "/api/v2/direct-debit/mandates/{mandateUid}" : {
      "get" : {
        "tags" : [ "Direct Debit Mandates" ],
        "summary" : "Get the direct debit mandate with the specified identifier",
        "operationId" : "getMandate",
        "parameters" : [ {
          "name" : "mandateUid",
          "in" : "path",
          "description" : "Unique identifier of the mandate.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DirectDebitMandateV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "mandate:read" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Direct Debit Mandates" ],
        "summary" : "Cancel the direct debit mandate with the specified identifier",
        "operationId" : "cancelMandate",
        "parameters" : [ {
          "name" : "mandateUid",
          "in" : "path",
          "description" : "Unique identifier of the mandate.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "mandate:delete" ]
        } ]
      }
    },
    "/api/v2/direct-debit/mandates" : {
      "get" : {
        "tags" : [ "Direct Debit Mandates" ],
        "summary" : "Get a list of direct debit mandates",
        "operationId" : "listMandates",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DirectDebitMandatesV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "mandate:read" ]
        } ]
      }
    },
    "/api/v2/direct-debit/mandates/account/{accountUid}" : {
      "get" : {
        "tags" : [ "Direct Debit Mandates" ],
        "summary" : "Get a list of direct debit mandates",
        "operationId" : "listMandatesForAccount",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Unique identifier of the account.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DirectDebitMandatesV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "mandate:read" ]
        } ]
      }
    },
    "/api/v2/direct-debit/mandates/{mandateUid}/payments" : {
      "get" : {
        "tags" : [ "Direct Debit Mandates" ],
        "summary" : "Get a transaction history for a direct debit",
        "operationId" : "listPaymentsForMandate",
        "parameters" : [ {
          "name" : "mandateUid",
          "in" : "path",
          "description" : "Unique identifier of the mandate.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "since",
          "in" : "query",
          "description" : "Start date for a transaction history",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-01-01"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DirectDebitPaymentsResponse"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "mandate:read" ]
        } ]
      }
    },
    "/api/v2/feed/account/{accountUid}/category/{categoryUid}/{feedItemUid}/attachments" : {
      "get" : {
        "tags" : [ "Transaction Feed" ],
        "summary" : "Fetches the list of items attached to a feed item",
        "description" : "Categories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.",
        "operationId" : "getFeedItemAttachments",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "feedItemUid",
          "in" : "path",
          "description" : "Feed item uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeedItemAttachments"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "attachment:read" ]
        } ]
      },
      "post" : {
        "tags" : [ "Transaction Feed" ],
        "summary" : "Uploads an attachment to a feed item",
        "operationId" : "attachToFeedItem",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "feedItemUid",
          "in" : "path",
          "description" : "Feed item uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Attachment input stream",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "uuid"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "attachment:write" ]
        } ]
      }
    },
    "/api/v2/feed/account/{accountUid}/category/{categoryUid}/{feedItemUid}/spending-category" : {
      "put" : {
        "tags" : [ "Transaction Feed" ],
        "summary" : "Changes the spending category for a transaction",
        "description" : "Categories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.\n\nThe spending category is different. It specifies the type of spending associated with the transaction, for example, `GROCERIES`, `GIFTS` or `VAT`.",
        "operationId" : "changeTransactionCategory",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "feedItemUid",
          "in" : "path",
          "description" : "Feed item uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Spending category",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateSpendingCategory"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "transaction:edit" ]
        } ]
      }
    },
    "/api/v2/feed/account/{accountUid}/category/{categoryUid}/{feedItemUid}/receipt" : {
      "get" : {
        "tags" : [ "Transaction Feed" ],
        "summary" : "Fetches the receipt, created by the registered application, for a given feed item",
        "description" : "Categories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.",
        "operationId" : "getReceipt",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "feedItemUid",
          "in" : "path",
          "description" : "Feed item uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Receipt"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "receipt:read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Transaction Feed" ],
        "summary" : "Submit a receipt for a feed item",
        "description" : "Categories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.",
        "operationId" : "createOrUpdateReceipt",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "feedItemUid",
          "in" : "path",
          "description" : "Feed item uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Receipt",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Receipt"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReceiptCreationResponse"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "receipt:write", "metadata:create", "metadata:edit" ]
        } ]
      }
    },
    "/api/v2/feed/account/{accountUid}/category/{categoryUid}/{feedItemUid}/attachments/{feedItemAttachmentUid}" : {
      "get" : {
        "tags" : [ "Transaction Feed" ],
        "summary" : "Downloads the feed item attachment",
        "description" : "Categories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.",
        "operationId" : "downloadFeedItemAttachment",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "feedItemUid",
          "in" : "path",
          "description" : "Feed item uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "feedItemAttachmentUid",
          "in" : "path",
          "description" : "Feed item attachment uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "attachment:read" ]
        } ]
      }
    },
    "/api/v2/feed/account/{accountUid}/category/{categoryUid}/{feedItemUid}" : {
      "get" : {
        "tags" : [ "Transaction Feed" ],
        "summary" : "Fetches a single feed item",
        "description" : "Categories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.",
        "operationId" : "getFeedItem",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "feedItemUid",
          "in" : "path",
          "description" : "Feed item uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeedItem"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "transaction:read" ]
        } ]
      }
    },
    "/api/v2/feed/account/{accountUid}/category/{categoryUid}/{feedItemUid}/mastercard" : {
      "get" : {
        "tags" : [ "Transaction Feed" ],
        "summary" : "Fetches additional details about the Mastercard Feed Item",
        "description" : "Categories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.",
        "operationId" : "getMastercardFeedItem",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "feedItemUid",
          "in" : "path",
          "description" : "Feed item uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MastercardFeedItem"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "transaction:read" ]
        } ]
      }
    },
    "/api/v2/feed/account/{accountUid}/category/{categoryUid}/{feedItemUid}/receipts" : {
      "get" : {
        "tags" : [ "Transaction Feed" ],
        "summary" : "Fetches all receipts for a given feed item",
        "description" : "Categories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.",
        "operationId" : "getReceipts",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "feedItemUid",
          "in" : "path",
          "description" : "Feed item uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Receipt"
                  }
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "receipts:read" ]
        } ]
      }
    },
    "/api/v2/feed/account/{accountUid}/category/{categoryUid}" : {
      "get" : {
        "tags" : [ "Transaction Feed" ],
        "summary" : "Get the account holder's feed items which were created or updated since a given date",
        "description" : "Categories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.",
        "operationId" : "queryFeedItems",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "changesSince",
          "in" : "query",
          "description" : "Items which have changed since",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2020-01-01T12:34:56.000Z"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeedItems"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "transaction:read" ]
        } ]
      }
    },
    "/api/v2/feed/account/{accountUid}/category/{categoryUid}/transactions-between" : {
      "get" : {
        "tags" : [ "Transaction Feed" ],
        "summary" : "Get the account holder's feed items for the specified category, which were created between two timestamps",
        "description" : "Categories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.",
        "operationId" : "queryFeedItemsByCategoryWithTransactionTimesBetween",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "minTransactionTimestamp",
          "in" : "query",
          "description" : "Minimum transaction timestamp",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2020-06-01T12:34:56.000Z"
        }, {
          "name" : "maxTransactionTimestamp",
          "in" : "query",
          "description" : "Maximum transaction timestamp",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2020-07-01T12:34:56.000Z"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeedItems"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "transaction:read" ]
        } ]
      }
    },
    "/api/v2/feed/account/{accountUid}/settled-transactions-between" : {
      "get" : {
        "tags" : [ "Transaction Feed" ],
        "summary" : "Get the account holder's settled feed items for the specified account, which have settlement time between the two provided timestamps",
        "operationId" : "queryFeedItemsWithTransactionTimesBetween",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "minTransactionTimestamp",
          "in" : "query",
          "description" : "Minimum transaction timestamp",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2020-06-01T12:34:56.000Z"
        }, {
          "name" : "maxTransactionTimestamp",
          "in" : "query",
          "description" : "Maximum transaction timestamp",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2020-07-01T12:34:56.000Z"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeedItems"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "transaction:read" ]
        } ]
      }
    },
    "/api/v2/feed/account/{accountUid}/category/{categoryUid}/{feedItemUid}/user-note" : {
      "put" : {
        "tags" : [ "Transaction Feed" ],
        "summary" : "Changes the user-specified note attached to a transaction",
        "description" : "Categories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.",
        "operationId" : "updateUserNote",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "feedItemUid",
          "in" : "path",
          "description" : "Feed item uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "User Note",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserNoteWrapper"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "transaction:edit" ]
        } ]
      }
    },
    "/api/v2/feed/account/{accountUid}/round-up" : {
      "get" : {
        "tags" : [ "Feed Round-up" ],
        "summary" : "Returns the the round-up goal associated with an account if one has been created",
        "operationId" : "fetchRoundUpGoal",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoundUpGoalResponse"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "savings-goal:read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Feed Round-up" ],
        "summary" : "Activates transaction round-up and adds remainder to savings goal",
        "operationId" : "activateRoundUpGoal",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Round-up goal",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoundUpGoalPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "savings-goal:create" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Feed Round-up" ],
        "summary" : "Deletes the round-up goal associated with an account if one exists",
        "operationId" : "stopRoundUpGoal",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "savings-goal:delete" ]
        } ]
      }
    },
    "/api/v2/identity/individual" : {
      "get" : {
        "tags" : [ "API User Identities" ],
        "summary" : "The individual who authorised the application",
        "operationId" : "getAuthorisingIndividual",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Individual"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "authorising-individual:read" ]
        } ]
      }
    },
    "/api/v2/identity/token" : {
      "get" : {
        "tags" : [ "API User Identities" ],
        "summary" : "Get current token identity",
        "description" : "This endpoint returns the permissions you have access to, the time until the token expires and the account holder's unique identifier.",
        "operationId" : "getTokenIdentity",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IdentityV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "none" ]
        } ]
      }
    },
    "/api/v2/identity/logout" : {
      "put" : {
        "tags" : [ "API User Identities" ],
        "summary" : "Logout the current individual",
        "description" : "This endpoint logs an individual out by disabling all of their active access tokens.",
        "operationId" : "logoutIndividual",
        "responses" : {
          "202" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "none" ]
        } ]
      }
    },
    "/api/v2/payments/local/account/{accountUid}/category/{categoryUid}/standing-orders/{paymentOrderUid}" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "Get a standing order",
        "description" : "Categories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.\n\nIf `startDate` is null, the standing order is awaiting review and has not yet been approved.\n\nIf `cancelledAt` is non-null, the standing order has been cancelled, either by the customer, or as a result of the payment review.",
        "operationId" : "getStandingOrder",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "paymentOrderUid",
          "in" : "path",
          "description" : "Payment Order uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StandingOrder"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "standing-order:read", "standing-order-own:read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Payments" ],
        "summary" : "Update a standing order",
        "description" : "Categories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.\n\nPossible 400 (Bad Request) errors include:\n * `CANNOT_MAKE_REQUESTED_CHANGE`: you cannot make this change to this standing order. You can create a new standing order instead. \n* `CANNOT_UPDATE_CANCELLED_PAYMENT_ORDER`: you cannot update this standing order because it has been cancelled.\n* `CANNOT_UPDATE_PENDING_PAYMENT_ORDER`: you cannot update this standing order at this time because it is pending. This can happen if the original standing order is awaiting review. In this case, `GET /api/v2/payments/local/account/{accountUid}/category/{categoryUid}/standing-orders/{paymentOrderUid}` will return a null `startDate`.",
        "operationId" : "updateStandingOrder",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "paymentOrderUid",
          "in" : "path",
          "description" : "Payment order uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Standing order update request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateStandingOrderRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateStandingOrderResponse"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "BearerAndSignature" : [ "standing-order:create" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Payments" ],
        "summary" : "Cancel a standing order",
        "description" : "Categories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.\n\nPossible 400 (Bad Request) errors include:\n * `CANNOT_CANCEL_PENDING_PAYMENT_ORDER`: you cannot cancel this standing order at this time because it is pending. This can happen if the original standing order is awaiting review. In this case, `GET /api/v2/payments/local/account/{accountUid}/category/{categoryUid}/standing-orders/{paymentOrderUid}` returns a null `startDate`.",
        "operationId" : "cancelStandingOrder",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "paymentOrderUid",
          "in" : "path",
          "description" : "Payment order uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "BearerAndSignature" : [ "standing-order:delete" ]
        } ]
      }
    },
    "/api/v2/payments/local/account/{accountUid}/category/{categoryUid}/standing-orders" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "List standing orders",
        "description" : "Categories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.\n\nStanding orders that are awaiting review are omitted from the list.",
        "operationId" : "listStandingOrders",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StandingOrdersResponse"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "standing-order:read", "standing-order-own:read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Payments" ],
        "summary" : "Create a new standing order",
        "description" : "Categories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.\n\nThe recipient of the standing order must either be defined in the `paymentRecipient` field in the request body  or be an existing payee of the account holder (you can create a new payee using `/api/v2/payees`).\n\n`externalIdentifier` is a unique identifier for the standing order request, and is generated by you. To ensure idempotency, this must be unique for each standing order request you create.\n\nNote that the standing order may not be created immediately if we need to review the request. In that case, the request may remain in a `PENDING` state for a while (possibly for a few hours).",
        "operationId" : "createStandingOrder",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Standing order creation object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateStandingOrderRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateStandingOrderResponse"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "BearerAndSignature" : [ "standing-order:create" ]
        } ]
      }
    },
    "/api/v2/payments/local/payment-order/{paymentOrderUid}" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "Get a payment order",
        "operationId" : "getPaymentOrder",
        "parameters" : [ {
          "name" : "paymentOrderUid",
          "in" : "path",
          "description" : "Payment order uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentOrderV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "pay-local:read" ]
        } ]
      }
    },
    "/api/v2/payments/local/payment-order/{paymentOrderUid}/payments" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "Get the payments associated with a payment order",
        "description" : "Note that a payment associated with a payment order may be pending (`paymentStatusDetails.paymentStatus = PENDING`)  or rejected (`paymentStatusDetails.paymentStatus = REJECTED`).",
        "operationId" : "getPaymentOrderPayments",
        "parameters" : [ {
          "name" : "paymentOrderUid",
          "in" : "path",
          "description" : "Payment order uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentOrderPaymentsResponse"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "pay-local:read" ]
        } ]
      }
    },
    "/api/v2/payments/local/account/{accountUid}/category/{categoryUid}/standing-orders/{paymentOrderUid}/upcoming-payments" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "List the next payment dates of a standing order",
        "description" : "Categories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.\n\nIf you only want the next payment date, you can also get this from the `nextDate` returned by `GET /api/v2/payments/local/account/{accountUid}/category/{categoryUid}/standing-orders/{paymentOrderUid}`.\n\nIf `nextPaymentDates` is empty for a standing order, the standing order may be awaiting review, or may have been cancelled. Or it may have been a one-off standing order: in this case, `nextDate` will be null too.",
        "operationId" : "listNextPaymentDates",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "paymentOrderUid",
          "in" : "path",
          "description" : "Payment Order uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Number of next payment dates to retrieve, between 1 and 100. If count is greater than the number of future payments all future payments will be returned. Defaults to 10.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NextPaymentDatesResponse"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "standing-order:read" ]
        } ]
      }
    },
    "/api/v2/payments/local/account/{accountUid}/category/{categoryUid}" : {
      "put" : {
        "tags" : [ "Payments" ],
        "summary" : "Create payment",
        "description" : "Creates and sends an immediate payment within the UK under the Faster Payments Scheme or via SEPA for payments between Euro accounts.\n\nCategories are subdivisions of an account.\nThe default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.\n\nThe recipient of the payment must either be defined in the `paymentRecipient` field in the request body  or be an existing payee of the account holder (you can create a new payee using `/api/v2/payees`).For payments made using a Personal Access Token, the recipient must be an existing payee defined in the `destinationPayeeAccountUid` field.\n\n`externalIdentifier` is a unique identifier for the payment request, and is generated by you. To ensure idempotency, this must be unique for each payment request you create.\n\nNote that the payment may not take place immediately if we need to review the payment request. In that case, the payment may remain in a `PENDING` state for a while (possibly for a few hours).",
        "operationId" : "makeLocalPayment",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "categoryUid",
          "in" : "path",
          "description" : "Category uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Payment instruction object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InstructLocalPaymentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InstructLocalPaymentResponse"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "BearerAndSignature" : [ "pay-local:create", "pay-local-once:create" ]
        } ]
      }
    },
    "/api/v2/payees" : {
      "get" : {
        "tags" : [ "Payees" ],
        "summary" : "Get an account holder's payees",
        "operationId" : "getPayees",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Payees"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "payee:read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Payees" ],
        "summary" : "Create a payee",
        "operationId" : "createPayee",
        "requestBody" : {
          "description" : "Payee creation object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PayeeCreationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PayeeCreationResponse"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "payee:create" ]
        } ]
      }
    },
    "/api/v2/payees/{payeeUid}/account" : {
      "put" : {
        "tags" : [ "Payees" ],
        "summary" : "Create a payee account",
        "operationId" : "createPayeeAccount",
        "parameters" : [ {
          "name" : "payeeUid",
          "in" : "path",
          "description" : "Unique identifier of the payee",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Payee account creation object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PayeeAccountCreationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PayeeAccountCreationResponse"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "payee:create" ]
        } ]
      }
    },
    "/api/v2/payees/{payeeUid}" : {
      "get" : {
        "tags" : [ "Payees" ],
        "summary" : "Get a specific account holder payee",
        "operationId" : "getPayee",
        "parameters" : [ {
          "name" : "payeeUid",
          "in" : "path",
          "description" : "Unique identifier of the payee",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Payee"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "payee:read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Payees" ],
        "summary" : "Update a payee",
        "operationId" : "updatePayee",
        "parameters" : [ {
          "name" : "payeeUid",
          "in" : "path",
          "description" : "Unique identifier of the payee",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Payee update object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PayeeCreationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConsentInformation"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "payee:edit" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Payees" ],
        "summary" : "Deletes a payee",
        "operationId" : "deletePayee",
        "parameters" : [ {
          "name" : "payeeUid",
          "in" : "path",
          "description" : "Unique identifier of the payee",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "payee:delete" ]
        } ]
      }
    },
    "/api/v2/payees/{payeeUid}/account/{accountUid}" : {
      "delete" : {
        "tags" : [ "Payees" ],
        "summary" : "Delete a payee account",
        "operationId" : "deletePayeeAccount",
        "parameters" : [ {
          "name" : "payeeUid",
          "in" : "path",
          "description" : "Unique identifier of the payee",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Unique identifier of the payee account",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "payee:delete" ]
        } ]
      }
    },
    "/api/v2/payees/{payeeUid}/account/{accountUid}/scheduled-payments" : {
      "get" : {
        "tags" : [ "Payees" ],
        "summary" : "Get scheduled payments",
        "operationId" : "listPaymentOrdersForAccount",
        "parameters" : [ {
          "name" : "payeeUid",
          "in" : "path",
          "description" : "Unique identifier of the payee",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Unique identifier of the payee account",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScheduledPaymentResponse"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "scheduled-payment:read" ]
        } ]
      }
    },
    "/api/v2/payees/{payeeUid}/account/{accountUid}/payments" : {
      "get" : {
        "tags" : [ "Payees" ],
        "summary" : "View a history of payments to your payee",
        "operationId" : "listPaymentsForPayeeAccount",
        "parameters" : [ {
          "name" : "payeeUid",
          "in" : "path",
          "description" : "Unique identifier of the payee",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Unique identifier of the payee account",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "since",
          "in" : "query",
          "description" : "Start date for a transaction history",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-01-01"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Payments"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "payee-transaction:read" ]
        } ]
      }
    },
    "/api/v2/payees/{payeeUid}/image" : {
      "get" : {
        "tags" : [ "Payees" ],
        "summary" : "Serves the image for the payee",
        "operationId" : "servePayeeImageFile",
        "parameters" : [ {
          "name" : "payeeUid",
          "in" : "path",
          "description" : "Unique identifier of the payee",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "image/png" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "payee-image:read" ]
        } ]
      }
    },
    "/api/v2/account/{accountUid}/savings-goals/{savingsGoalUid}/add-money/{transferUid}" : {
      "put" : {
        "tags" : [ "Savings Goals" ],
        "summary" : "Add money into a savings goal",
        "operationId" : "addMoney",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "savingsGoalUid",
          "in" : "path",
          "description" : "Savings goal uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "transferUid",
          "in" : "path",
          "description" : "Transfer uid, generated by the caller",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Top up request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopUpRequestV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavingsGoalTransferResponseV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "savings-goal-transfer:create" ]
        } ]
      }
    },
    "/api/v2/account/{accountUid}/savings-goals/{savingsGoalUid}/recurring-transfer" : {
      "get" : {
        "tags" : [ "Savings Goals" ],
        "summary" : "Get the recurring transfer of a savings goal",
        "operationId" : "getRecurringTransfer",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "savingsGoalUid",
          "in" : "path",
          "description" : "Savings goal uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScheduledSavingsPaymentV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "savings-goal-transfer:read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Savings Goals" ],
        "summary" : "Create a recurring transfer into a savings goal",
        "operationId" : "createOrUpdateRecurringTransfer",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "savingsGoalUid",
          "in" : "path",
          "description" : "Savings goal uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Recurring transfer request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScheduledSavingsPaymentRequestV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavingsGoalTransferResponseV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "savings-goal-transfer:create" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Savings Goals" ],
        "summary" : "Delete the recurring transfer of a savings goal",
        "operationId" : "deleteRecurringTransfer",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "savingsGoalUid",
          "in" : "path",
          "description" : "Savings goal uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "savings-goal-transfer:delete" ]
        } ]
      }
    },
    "/api/v2/account/{accountUid}/savings-goals" : {
      "get" : {
        "tags" : [ "Savings Goals" ],
        "summary" : "Get all savings goals",
        "operationId" : "getSavingsGoals",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavingsGoalsV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "savings-goal:read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Savings Goals" ],
        "summary" : "Create a savings goal",
        "operationId" : "createSavingsGoal",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Savings goal request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SavingsGoalRequestV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateOrUpdateSavingsGoalResponseV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "savings-goal:create" ]
        } ]
      }
    },
    "/api/v2/account/{accountUid}/savings-goals/{savingsGoalUid}" : {
      "get" : {
        "tags" : [ "Savings Goals" ],
        "summary" : "Get a savings goal",
        "operationId" : "getSavingsGoal",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "savingsGoalUid",
          "in" : "path",
          "description" : "Savings goal uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavingsGoalV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "savings-goal:read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Savings Goals" ],
        "summary" : "Update an existing goal",
        "operationId" : "updateSavingsGoal",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "savingsGoalUid",
          "in" : "path",
          "description" : "Savings goal uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Savings goal request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SavingsGoalRequestV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateOrUpdateSavingsGoalResponseV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "savings-goal:create" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Savings Goals" ],
        "summary" : "Delete a savings goal",
        "operationId" : "deleteSavingsGoal",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "savingsGoalUid",
          "in" : "path",
          "description" : "Savings goal uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "savings-goal:delete" ]
        } ]
      }
    },
    "/api/v2/account/{accountUid}/savings-goals/{savingsGoalUid}/photo" : {
      "get" : {
        "tags" : [ "Savings Goals" ],
        "summary" : "Get the photo associated with a savings goal",
        "operationId" : "getSavingsGoalPhoto",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "savingsGoalUid",
          "in" : "path",
          "description" : "Savings goal uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavingsGoalPhotoV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "savings-goal:read" ]
        } ]
      }
    },
    "/api/v2/account/{accountUid}/savings-goals/{savingsGoalUid}/withdraw-money/{transferUid}" : {
      "put" : {
        "tags" : [ "Savings Goals" ],
        "summary" : "Withdraw money from a savings goal",
        "operationId" : "withdrawMoney",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "savingsGoalUid",
          "in" : "path",
          "description" : "Savings goal uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "transferUid",
          "in" : "path",
          "description" : "Transfer uid, generated by the caller",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "requestBody" : {
          "description" : "Withdrawal request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WithdrawalRequestV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavingsGoalTransferResponseV2"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "savings-goal-transfer:create" ]
        } ]
      }
    },
    "/api/v2/settle-up/profile" : {
      "get" : {
        "tags" : [ "Settle Up" ],
        "summary" : "Fetch Settle Up profile for an account holder",
        "operationId" : "getSettleUpProfile",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettleUpProfile"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "settle-up:read" ]
        } ]
      }
    },
    "/api/v2/account/{accountUid}/spaces/{spaceUid}/photo" : {
      "get" : {
        "tags" : [ "Spaces" ],
        "summary" : "Get the photo associated with a space",
        "operationId" : "getSpacePhoto",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account UID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "spaceUid",
          "in" : "path",
          "description" : "Space UID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpacePhoto"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "space:read" ]
        } ]
      }
    },
    "/api/v2/account/{accountUid}/spaces" : {
      "get" : {
        "tags" : [ "Spaces" ],
        "summary" : "Get all active savings and spending spaces",
        "operationId" : "getSpaces",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Spaces"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "space:read" ]
        } ]
      }
    },
    "/api/v2/account/{accountUid}/spaces/spending/{spaceUid}" : {
      "get" : {
        "tags" : [ "Spaces" ],
        "summary" : "Get a spending space",
        "operationId" : "getSpendingSpace",
        "parameters" : [ {
          "name" : "accountUid",
          "in" : "path",
          "description" : "Account uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }, {
          "name" : "spaceUid",
          "in" : "path",
          "description" : "Spending space uid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpendingSpace"
                }
              }
            }
          },
          "4xx" : {
            "description" : "Client error. See [API status codes](#api-status-codes-1) for more details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5xx" : {
            "description" : "Server error. See [API status codes](#api-status-codes-1) for more details."
          }
        },
        "security" : [ {
          "Bearer" : [ "space:read" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "AccountStatementPeriod" : {
        "required" : [ "partial", "period" ],
        "type" : "object",
        "properties" : {
          "period" : {
            "type" : "string",
            "description" : "The period for which the statement is available",
            "example" : "2023-01"
          },
          "partial" : {
            "type" : "boolean",
            "description" : "Is the statement for this period partial",
            "example" : true
          },
          "endsAt" : {
            "type" : "string",
            "description" : "End timestamp for the period",
            "format" : "date-time"
          }
        },
        "description" : "A period for which an account statement is available"
      },
      "AccountStatementPeriods" : {
        "type" : "object",
        "properties" : {
          "periods" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountStatementPeriod"
            }
          }
        },
        "description" : "A list of periods for which an account statement is available"
      },
      "ErrorDetail" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "The error message",
            "example" : "Something about the error"
          }
        },
        "description" : "Detail of the error"
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          },
          "success" : {
            "type" : "boolean",
            "example" : false
          }
        },
        "description" : "Erroneous response wrapper"
      },
      "BalanceV2" : {
        "type" : "object",
        "properties" : {
          "clearedBalance" : {
            "$ref" : "#/components/schemas/SignedCurrencyAndAmount"
          },
          "effectiveBalance" : {
            "$ref" : "#/components/schemas/SignedCurrencyAndAmount"
          },
          "pendingTransactions" : {
            "$ref" : "#/components/schemas/SignedCurrencyAndAmount"
          },
          "acceptedOverdraft" : {
            "$ref" : "#/components/schemas/SignedCurrencyAndAmount"
          },
          "amount" : {
            "$ref" : "#/components/schemas/SignedCurrencyAndAmount"
          },
          "totalClearedBalance" : {
            "$ref" : "#/components/schemas/SignedCurrencyAndAmount"
          },
          "totalEffectiveBalance" : {
            "$ref" : "#/components/schemas/SignedCurrencyAndAmount"
          }
        },
        "description" : "Balance details"
      },
      "SignedCurrencyAndAmount" : {
        "required" : [ "currency", "minorUnits" ],
        "type" : "object",
        "properties" : {
          "currency" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "ISO-4217 3 character currency code",
            "example" : "GBP"
          },
          "minorUnits" : {
            "minimum" : -9223372036854775808,
            "type" : "integer",
            "description" : "Amount in the minor units of the given currency; eg pence in GBP, cents in EUR",
            "format" : "int64",
            "example" : 123456
          }
        }
      },
      "AccountIdentifier" : {
        "type" : "object",
        "properties" : {
          "identifierType" : {
            "type" : "string",
            "description" : "The type of account identifier",
            "example" : "SORT_CODE",
            "enum" : [ "SORT_CODE", "IBAN_BIC", "ABA_ACH" ]
          },
          "bankIdentifier" : {
            "type" : "string",
            "description" : "Identifier to uniquely identify the bank, e.g. a sort code or BIC",
            "example" : "608371"
          },
          "accountIdentifier" : {
            "type" : "string",
            "description" : "Identifier to uniquely identify the account at the bank, e.g. an account number or IBAN",
            "example" : "47675488"
          }
        },
        "description" : "Bank and account identifiers for a particular identifier type"
      },
      "AccountIdentifiers" : {
        "type" : "object",
        "properties" : {
          "accountIdentifier" : {
            "type" : "string",
            "description" : "Identifier to uniquely identify the account at the bank",
            "example" : "01234567"
          },
          "bankIdentifier" : {
            "type" : "string",
            "description" : "Identifier to uniquely identify the bank",
            "example" : "608371"
          },
          "iban" : {
            "type" : "string",
            "description" : "International identifier to uniquely identify the account at the bank",
            "example" : "GB63SRLG60837101234567"
          },
          "bic" : {
            "type" : "string",
            "description" : "International identifier to uniquely identify the bank",
            "example" : "SRLGGB2L"
          },
          "accountIdentifiers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountIdentifier"
            }
          }
        },
        "description" : "Bank account identifiers"
      },
      "AccountV2" : {
        "type" : "object",
        "properties" : {
          "accountUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "bbccbbcc-bbcc-bbcc-bbcc-bbccbbccbbcc"
          },
          "accountType" : {
            "type" : "string",
            "example" : "PRIMARY",
            "enum" : [ "PRIMARY", "ADDITIONAL", "LOAN", "FIXED_TERM_DEPOSIT", "SAVINGS" ]
          },
          "defaultCategory" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "ccddccdd-ccdd-ccdd-ccdd-ccddccddccdd"
          },
          "currency" : {
            "type" : "string",
            "example" : "GBP",
            "enum" : [ "UNDEFINED", "AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOV", "BRL", "BSD", "BTN", "BWP", "BYN", "BYR", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CUC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LTL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRO", "MRU", "MUR", "MVR", "MWK", "MXN", "MXV", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RUR", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SLE", "SOS", "SRD", "SSP", "STD", "STN", "SVC", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "USN", "USS", "UYI", "UYU", "UZS", "VEF", "VES", "VND", "VUV", "WST", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XCG", "XDR", "XOF", "XPD", "XPF", "XPT", "XSU", "XTS", "XUA", "XXX", "YER", "ZAR", "ZMW", "ZWL", "ZWG" ]
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string",
            "example" : "Personal"
          }
        },
        "description" : "Bank account details"
      },
      "Accounts" : {
        "type" : "object",
        "properties" : {
          "accounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountV2"
            }
          }
        },
        "description" : "The accounts of an account holder"
      },
      "ConfirmationOfFundsResponse" : {
        "type" : "object",
        "properties" : {
          "requestedAmountAvailableToSpend" : {
            "type" : "boolean",
            "description" : "True if requested amount is available to spend",
            "example" : true
          },
          "accountWouldBeInOverdraftIfRequestedAmountSpent" : {
            "type" : "boolean",
            "description" : "True if spending the requested amount would put the account in overdraft",
            "example" : true
          }
        }
      },
      "Business" : {
        "type" : "object",
        "properties" : {
          "companyName" : {
            "type" : "string",
            "example" : "Starling Bank"
          },
          "companyType" : {
            "type" : "string",
            "example" : "LTD"
          },
          "companyCategory" : {
            "type" : "string",
            "example" : "FINANCIAL_SERVICES_AND_PRODUCTS"
          },
          "companySubCategory" : {
            "type" : "string",
            "example" : "FINANCIAL_AND_INVESTMENT_ADVICE"
          },
          "companyRegistrationNumber" : {
            "type" : "string",
            "example" : "09092149"
          },
          "email" : {
            "type" : "string",
            "example" : "help@starlingbank.com"
          },
          "phone" : {
            "type" : "string",
            "example" : "+442079304450"
          }
        },
        "description" : "Details of a business account holder"
      },
      "AddressV2" : {
        "required" : [ "countryCode", "line1", "postCode", "postTown" ],
        "type" : "object",
        "properties" : {
          "line1" : {
            "type" : "string",
            "example" : "1A Admiralty Arch"
          },
          "line2" : {
            "type" : "string",
            "example" : "The Mall"
          },
          "line3" : {
            "type" : "string",
            "example" : "City of Westminster"
          },
          "postTown" : {
            "type" : "string",
            "example" : "London"
          },
          "postCode" : {
            "type" : "string",
            "example" : "SW1A 2WH"
          },
          "countryCode" : {
            "type" : "string",
            "description" : "Country code in ISO 3166-1 alpha-2. NB GB is the official country code for the UK. UK is not the officially assigned code, and so is not valid",
            "example" : "GB"
          }
        },
        "description" : "Physical address of account holder"
      },
      "Individual" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "example" : "Mr"
          },
          "firstName" : {
            "type" : "string",
            "example" : "Dave"
          },
          "lastName" : {
            "type" : "string",
            "example" : "Bowman"
          },
          "dateOfBirth" : {
            "type" : "string",
            "format" : "date",
            "example" : "1968-04-02"
          },
          "email" : {
            "type" : "string",
            "example" : "dave.bowman@example.com"
          },
          "phone" : {
            "type" : "string",
            "example" : "+447700900123"
          }
        },
        "description" : "Information about an individual account holder"
      },
      "UpdateEmailRequest" : {
        "required" : [ "email" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "The new email address for the account holder",
            "format" : "email",
            "example" : "dave.bowman@example.com"
          }
        }
      },
      "JointAccount" : {
        "type" : "object",
        "properties" : {
          "accountHolderUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "aabbaabb-aabb-aabb-aabb-aabbaabbaabb"
          },
          "personOne" : {
            "$ref" : "#/components/schemas/Individual"
          },
          "personTwo" : {
            "$ref" : "#/components/schemas/Individual"
          }
        },
        "description" : "Information about a joint account"
      },
      "CategoryDescription" : {
        "type" : "object",
        "properties" : {
          "locale" : {
            "type" : "string",
            "description" : "Locale",
            "example" : "en_GB"
          },
          "displayText" : {
            "type" : "string",
            "description" : "Display text",
            "example" : "Financial services and products"
          }
        },
        "description" : "Response object contain category description"
      },
      "SoleTrader" : {
        "type" : "object",
        "properties" : {
          "tradingAsName" : {
            "type" : "string",
            "description" : "Trading as name",
            "example" : "Starling Bank"
          },
          "businessCategory" : {
            "type" : "string",
            "description" : "Business category",
            "example" : "FINANCIAL_SERVICES_AND_PRODUCTS",
            "enum" : [ "NOT_PROVIDED", "ARTS_CRAFTS_AND_COLLECTIBLES", "BABY", "BEAUTY_AND_FRAGRANCES", "BOOKS_AND_MAGAZINES", "BUSINESS_TO_BUSINESS", "CLOTHING_ACCESSORIES_AND_SHOES", "COMPUTERS_ACCESSORIES_AND_SERVICES", "EDUCATION", "ELECTRONICS_AND_TELECOM", "ENTERTAINMENT_AND_MEDIA", "FINANCIAL_SERVICES_AND_PRODUCTS", "FOOD_RETAIL_AND_SERVICE", "GIFTS_AND_FLOWERS", "HEALTH_AND_PERSONAL_CARE", "HOME_AND_GARDEN", "NONPROFIT", "PETS_AND_ANIMALS", "RELIGION_AND_SPIRITUALITY_FOR_PROFIT", "RETAIL_NOT_ELSEWHERE_CLASSIFIED", "SERVICES_OTHER", "SPORTS_AND_OUTDOORS", "TOYS_AND_HOBBIES", "TRAVEL", "VEHICLE_SERVICE_AND_ACCESSORIES", "PROFESSIONAL_SERVICES", "RETAIL_BARS_AND_RESTAURANTS", "ENTERTAINMENT_AND_TRAVEL", "HEALTH_AND_SOCIAL_CARE", "TRANSPORT_AND_VEHICLES", "CONSTRUCTION_TRADES_AND_CLEANING", "PROPERTY", "EXERCISE_AND_FITNESS", "EDUCATION_AND_SKILLS", "NON_PROFIT", "MANUFACTURING_RND_AND_AGRICULTURE" ]
          },
          "businessSubCategory" : {
            "type" : "string",
            "description" : "Business subcategory",
            "example" : "FINANCIAL_AND_INVESTMENT_ADVICE",
            "enum" : [ "NOT_PROVIDED", "ART_AND_CRAFT_SUPPLIES", "ART_DEALERS_AND_GALLERIES", "CAMERA_AND_PHOTOGRAPHIC_SUPPLIES", "DIGITAL_ART", "MEMORABILIA", "MUSIC_STORE_INSTRUMENTS_AND_SHEET_MUSIC", "SEWING_NEEDLEWORK_AND_FABRICS", "STAMP_AND_COIN", "STATIONARY_PRINTING_AND_WRITING_PAPER", "VINTAGE_AND_COLLECTIBLES", "CLOTHING", "FURNITURE", "BABY_PRODUCTS_OTHER", "SAFETY_AND_HEALTH", "BATH_AND_BODY", "FRAGRANCES_AND_PERFUMES", "MAKEUP_AND_COSMETICS", "AUDIO_BOOKS", "DIGITAL_CONTENT", "EDUCATIONAL_AND_TEXTBOOKS", "FICTION_AND_NONFICTION", "MAGAZINES", "BOOKS_PUBLISHING_AND_PRINTING", "RARE_AND_USED_BOOKS", "ACCOUNTING", "ADVERTISING", "AGRICULTURAL", "ARCHITECTURAL_ENGINEERING_AND_SURVEYING_SERVICES", "CHEMICALS_AND_ALLIED_PRODUCTS", "COMMERCIAL_PHOTOGRAPHY_ART_AND_GRAPHICS", "CONSTRUCTION", "CONSULTING_SERVICES", "EDUCATIONAL_SERVICES", "EQUIPMENT_RENTALS_AND_LEASING_SERVICES", "EQUIPMENT_REPAIR_SERVICES", "HIRING_SERVICES", "INDUSTRIAL_AND_MANUFACTURING_SUPPLIES", "MAILING_LISTS", "MARKETING", "MULTILEVEL_MARKETING", "OFFICE_AND_COMMERCIAL_FURNITURE", "OFFICE_SUPPLIES_AND_EQUIPMENT", "PUBLISHING_AND_PRINTING", "QUICK_COPY_AND_REPRODUCTION_SERVICES", "SHIPPING_AND_PACKING", "STENOGRAPHIC_AND_SECRETARIAL_SUPPORT_SERVICES", "WHOLESALE", "CHILDRENS_CLOTHING", "MENS_CLOTHING", "WOMENS_CLOTHING", "SHOES", "MILITARY_AND_CIVIL_SERVICE_UNIFORMS", "ACCESSORIES", "RETAIL_FINE_JEWELRY_AND_WATCHES", "WHOLESALE_PRECIOUS_STONES_AND_METALS", "FASHION_JEWELLERY", "COMPUTER_AND_DATA_PROCESSING_SERVICES", "DESKTOPS_LAPTOPS_AND_NOTEBOOKS", "COMPUTER_DIGITAL_CONTENT", "ECOMMERCE_SERVICES", "MAINTENANCE_AND_REPAIR_SERVICES", "MONITORS_AND_PROJECTORS", "NETWORKING", "ONLINE_GAMING", "PARTS_AND_ACCESSORIES", "PERIPHERALS", "SOFTWARE", "TRAINING_SERVICES", "WEB_HOSTING_AND_DESIGN", "BUSINESS_AND_SECRETARIAL_SCHOOLS", "CHILD_DAYCARE_SERVICES", "DANCE_HALLS_STUDIOS_AND_SCHOOLS", "VOCATIONAL_AND_TRADE_SCHOOLS", "CAMERAS_CAMCORDERS_AND_EQUIPMENT", "CELL_PHONES_PDAS_AND_PAGERS", "GENERAL_ELECTRONIC_ACCESSORIES", "HOME_AUDIO", "HOME_ELECTRONICS", "SECURITY_AND_SURVEILLANCE", "TELECOMMUNICATION_EQUIPMENT_AND_SALES", "TELECOMMUNICATION_SERVICES", "TELEPHONE_CARDS", "ENTERTAINMENT_MEMORABILIA", "MOVIE_TICKETS", "MOVIES_DVDS_VIDEOTAPES", "MUSIC_CDS_CASSETTES_AND_ALBUMS", "CABLE_SATELLITE_AND_OTHER_PAY_TV_AND_RADIO", "CONCERT_TICKETS", "THEATER_TICKETS", "TOYS_AND_GAMES", "ENTERTAINMENT_DIGITAL_CONTENT", "ENTERTAINERS", "ONLINE_GAMES", "VIDEO_GAMES_AND_SYSTEMS", "FINANCIAL_ACCOUNTING", "DEBT_COUNSELING_SERVICE", "FINANCIAL_AND_INVESTMENT_ADVICE", "REAL_ESTATE_AGENT", "RENTAL_PROPERTY_MANAGEMENT", "ALCOHOLIC_BEVERAGES", "CATERING_SERVICES", "COFFEE_AND_TEA", "GOURMET_FOODS", "SPECIALTY_AND_MISCELLANEOUS_FOOD_STORES", "RESTAURANT", "TOBACCO", "VITAMINS_AND_SUPPLEMENTS", "FLORIST", "GIFT_CARD_NOVELTY_AND_SOUVENIR_SHOPS", "GIFTS_GOURMET_FOODS", "NURSERY_PLANTS_AND_FLOWERS", "PARTY_SUPPLIES", "DENTAL_CARE", "MEDICAL_CARE", "MEDICAL_EQUIPMENT_AND_SUPPLIES", "VISION_CARE", "HEALTH_VITAMINS_AND_SUPPLEMENTS", "APPLIANCES", "HOME_ART_DEALERS_AND_GALLERIES", "BED_AND_BATH", "CONSTRUCTION_MATERIAL", "DRAPERY_WINDOW_COVERING_AND_UPHOLSTERY", "EXTERMINATING_AND_DISINFECTING_SERVICES", "FIREPLACE_AND_FIREPLACE_SCREENS", "HOME_FURNITURE", "GARDEN_SUPPLIES", "GLASS_PAINT_AND_WALLPAPER", "HARDWARE_AND_TOOLS", "HOME_DECOR", "HOUSEWARES", "KITCHENWARE", "LANDSCAPING", "RUGS_AND_CARPETS", "SECURITY_AND_SURVEILLANCE_EQUIPMENT", "SWIMMING_POOLS_AND_SPAS", "CHARITY", "POLITICAL", "RELIGIOUS", "OTHER", "PERSONAL", "EDUCATIONAL", "MEDICATION_AND_SUPPLEMENTS", "PET_SHOPS_PET_FOOD_AND_SUPPLIES", "SPECIALTY_OR_RARE_PETS", "VETERINARY_SERVICES", "MEMBERSHIP_SERVICES", "MERCHANDISE", "SERVICES_NOT_ELSEWHERE_CLASSIFIED", "RETAIL_CHEMICALS_AND_ALLIED_PRODUCTS", "DEPARTMENT_STORE", "DISCOUNT_STORE", "DURABLE_GOODS", "NONDURABLE_GOODS", "USED_AND_SECONDHAND_STORE", "VARIETY_STORE", "SERVICES_ADVERTISING", "SHOPPING_SERVICES_AND_BUYING_CLUBS", "CAREER_SERVICES", "CARPENTRY", "CHILD_CARE_SERVICES", "CLEANING_AND_MAINTENANCE", "COMMERCIAL_PHOTOGRAPHY", "SERVICES_COMPUTER_AND_DATA_PROCESSING_SERVICES", "COMPUTER_NETWORK_SERVICES", "SERVICES_CONSULTING_SERVICES", "COUNSELING_SERVICES", "COURIER_SERVICES", "SERVICES_DENTAL_CARE", "SERVICES_ECOMMERCE_SERVICES", "ELECTRICAL_AND_SMALL_APPLIANCE_REPAIR", "ENTERTAINMENT", "EQUIPMENT_RENTAL_AND_LEASING_SERVICES", "EVENT_AND_WEDDING_PLANNING", "GENERAL_CONTRACTORS", "GRAPHIC_AND_COMMERCIAL_DESIGN", "HEALTH_AND_BEAUTY_SPAS", "IDS_LICENSES_AND_PASSPORTS", "IMPORTING_AND_EXPORTING", "INFORMATION_RETRIEVAL_SERVICES", "LANDSCAPING_AND_HORTICULTURAL", "LEGAL_SERVICES_AND_ATTORNEYS", "LOCAL_DELIVERY_SERVICE", "SERVICES_MEDICAL_CARE", "MEMBERSHIP_CLUBS_AND_ORGANIZATIONS", "SERVICES_MISC_PUBLISHING_AND_PRINTING", "MOVING_AND_STORAGE", "PHOTOFINISHING", "PHOTOGRAPHIC_STUDIOS__PORTRAITS", "PROTECTIVE_AND_SECURITY_SERVICES", "SERVICES_QUICK_COPY_AND_REPRODUCTION_SERVICES", "RADIO_TELEVISION_AND_STEREO_REPAIR", "REAL_ESTATE_AGENT_", "SERVICES_RENTAL_PROPERTY_MANAGEMENT", "REUPHOLSTERY_AND_FURNITURE_REPAIR", "SERVICES_SERVICES_NOT_ELSEWHERE_CLASSIFIED", "SERVICES_SHIPPING_AND_PACKING", "SWIMMING_POOL_SERVICES", "TAILORS_AND_ALTERATIONS", "TELECOMMUNICATION_SERVICE", "UTILITIES", "SERVICES_VISION_CARE", "WATCH_CLOCK_AND_JEWELRY_REPAIR", "ATHLETIC_SHOES", "BICYCLE_SHOP_SERVICE_AND_REPAIR", "BOATING_SAILING_AND_ACCESSORIES", "CAMPING_AND_OUTDOORS", "SPORTS_DANCE_HALLS_STUDIOS_AND_SCHOOLS", "EXERCISE_AND_FITNESS", "FAN_GEAR_AND_MEMORABILIA", "HUNTING", "MARTIAL_ARTS_WEAPONS", "SPORT_GAMES_AND_TOYS", "SPORTING_EQUIPMENT", "SPORTS_SWIMMING_POOLS_AND_SPAS", "ARTS_AND_CRAFTS", "HOBBIES_CAMERA_AND_PHOTOGRAPHIC_SUPPLIES", "HOBBY_TOY_AND_GAME_SHOPS", "HOBBIES_MEMORABILIA", "MUSIC_STORE__INSTRUMENTS_AND_SHEET_MUSIC", "HOBBIES_STAMP_AND_COIN", "HOBBIES_STATIONARY_PRINTING_AND_WRITING_PAPER", "HOBBIES_VINTAGE_AND_COLLECTIBLES", "HOBBIES_VIDEO_GAMES_AND_SYSTEMS", "AIRLINE", "AUTO_RENTAL", "BUS_LINE", "CRUISES", "LODGING_AND_ACCOMMODATIONS", "LUGGAGE_AND_LEATHER_GOODS", "RECREATIONAL_SERVICES", "SPORTING_AND_RECREATION_CAMPS", "TAXICABS_AND_LIMOUSINES", "TIMESHARES", "TOURS", "TRAILER_PARKS_OR_CAMPGROUNDS", "TRANSPORTATION_SERVICES__OTHER", "TRAVEL_AGENCY", "NEW_PARTS_AND_SUPPLIES__MOTOR_VEHICLE", "USED_PARTS__MOTOR_VEHICLE", "AUDIO_AND_VIDEO", "AUTO_BODY_REPAIR_AND_PAINT", "SERVICES_AUTO_RENTAL", "AUTO_SERVICE", "AUTOMOTIVE_TIRE_SUPPLY_AND_SERVICE", "BOAT_RENTAL_AND_LEASES", "CAR_WASH", "MOTOR_HOME_AND_RECREATIONAL_VEHICLE_RENTAL", "TOOLS_AND_EQUIPMENT", "TOWING_SERVICE", "TRUCK_AND_UTILITY_TRAILER_RENTAL", "VEHICLE_ACCESSORIES", "CLEANING", "DECORATING", "ELECTRICIAN", "PLUMBER", "GAS_AND_HEATING", "CARPENTRY_TRADE", "ROOFING", "GARDENING_AND_TREE_SURGERY", "GENERAL_CONTRACTOR", "CONSTRUCTION_SUPPLIER", "WASTE_AND_RECYCLING", "SCRAP_METAL", "SITE_AND_BUILDING_MANAGEMENT", "PEST_CONTROL", "CONSTRUCTION_TRADES_AND_CLEANING_OTHER", "PERSONAL_TUTOR", "MUSIC_TEACHERS", "PROFESSIONAL_TRAINER", "PUBLIC_SPEAKING", "NURSERY", "CHILDMINDER", "NANNY_OR_AU_PAIR", "CHILDRENS_ACTIVITIES", "STUDENT_RECRUITMENT", "STUDENT_SUPPORT", "SCHOOLS_COLLEGES_AND_TRAINING", "EDUCATION_AND_SKILLS_OTHER", "DIGITAL_CONTENT_OR_GAMES", "VIDEO_PRODUCTION", "INFLUENCER", "PROMOTION_AND_PUBLISHING", "CATERING", "ENTERTAINERS_AND_DJS", "EVENTS_AND_WEDDINGS", "EVENTS_PRODUCTS", "EVENTS_STAFFING_AND_SERVICES", "TRAVEL_AGENT", "TOUR_GUIDE", "LODGING_AND_ACCOMMODATION", "TV_AND_RADIO", "MUSICIAN_OR_GROUPS", "ENTERTAINMENT_AND_TRAVEL_OTHER", "PERSONAL_TRAINER", "SPORTS_COACH", "SPORTS_CLUB", "SPORTS_AND_FITNESS_VENUE", "GYM_OPERATOR", "CLASS_INSTRUCTOR", "EXERCISE_AND_FITNESS_OTHER", "DOCTOR_NURSE_OR_MIDWIFE", "PHARMACY", "PERSONAL_AND_SOCIAL_CARE", "PHYSIOTHERAPIST", "NUTRITION_AND_DIET", "MENTAL_HEALTH_AND_COUNSELLING", "MEDICAL_EQUIPMENT_AND_SUPPLIERS", "DENTAL", "OPTICIAN", "OTHER_MEDICAL_THERAPY", "CHIROPRACTOR_OR_OSTEOPATH", "PODIATRIST", "COMPLIMENTARY_AND_ALTERNATIVE_MEDICINE", "HEALTH_AND_SOCIAL_CARE_OTHER", "MANUFACTURING", "INDUSTRIAL_ENGINEER", "FOOD_OR_DRINK_PRODUCTION", "RESEARCH_AND_DEVELOPMENT", "LIVESTOCK_FARMING", "CROP_FARMING", "HORTICULTURE_OR_PLANT_NURSERY", "FORESTRY", "VETERINARY", "SUPPLIER_TO_AGRICULTURE_OR_INDUSTRY", "EQUESTRIAN", "ANIMAL_CARE", "ARMS_MANUFACTURER", "MINING", "OIL_AND_GAS", "COAL", "COMMERCIAL_FISHING", "MANUFACTURING_RND_AND_AGRICULTURE_OTHER", "ANIMALS", "ARTS_CULTURE_AND_HUMANITIES", "COMMUNITY_DEVELOPMENT", "EDUCATION", "ENVIRONMENT", "HEALTH_AND_DISEASE", "HUMAN_AND_CIVIL_RIGHTS", "CHILDREN_YOUTH_AND_FAMILY", "HOMELESSNESS", "INTERNATIONAL", "RESEARCH_AND_PUBLIC_POLICY", "RELIGION", "POLITICAL_PARTY", "NON_PROFIT_OTHER", "ARCHITECT_STRUCTURAL_ENGINEER_OR_SURVEYOR", "ACCOUNTANCY_AND_BOOKKEEPING", "BUSINESS_SERVICES", "FINANCIAL_OR_INVESTMENT_ADVICE", "MORTGAGE_BROKERS", "SOFTWARE_AND_IT", "WEBSITE_DEVELOPMENT", "MANAGEMENT_CONSULTANCY", "PROJECT_MANAGEMENT", "MARKETING_ADVERTISING_AND_DESIGN", "GRAPHIC_DESIGN_AND_ILLUSTRATION", "INTERIOR_DESIGN", "RECRUITMENT_AND_HIRING", "LEGAL", "PHOTOGRAPHY", "SECURITY", "PROBATE_ESTATE_MANAGEMENT", "PAYROLL_PROVIDER", "INSOLVENCY_PRACTITIONER", "TRUST_AND_COMPANY_SERVICE", "PROFESSIONAL_SERVICES_OTHER", "RETAIL_DEPOSIT_TAKER", "DEBT_MANAGEMENT", "DEBT_COLLECTOR", "ASSET_FINANCE", "BUY_NOW_PAY_LATER", "PEER_TO_PEER_LENDING", "PAY_DAY_LENDER", "PAWN_BROKER", "CREDIT_CARDS", "TERM_LOANS", "MORTGAGE_LENDER", "CLAIMS_MANAGEMENT", "EMONEY_PREPAID", "INSURANCE", "PENSION_PROVIDER", "CREDIT_REFERENCE_AGENCY", "CURRENCY_EXCHANGE", "CRYPTO_EXCHANGE", "COMMODITY_EXCHANGE", "MONEY_TRANSFER", "INVESTMENT_BANK", "FUND_MANAGER", "FUND_MANAGEMENT", "INTERNATIONAL_FINANCE", "MERCHANT_BANKING", "MARKET_MAKER", "SHARE_TRADING", "EQUITIES_TRADING", "DERIVATIVES_TRADING", "FX_TRADING", "INVESTMENT_MANAGEMENT", "ASSET_MANAGEMENT", "INVESTMENT_DEAL_ARRANGEMENTS", "BEARER_SHARES", "PROPERTY_OWNER", "PROPERTY_INVESTOR", "PROPERTY_INVESTMENT_FUND", "RESIDENTS_ASSOCIATION", "LEASEHOLD_OR_FREEHOLD", "HOLIDAY_OR_SHORT_TERM_LETS", "PROPERTY_REDEVELOPMENT", "ESTATE_AGENT", "PROPERTY_MANAGEMENT", "STORAGE", "PROPERTY_OTHER", "RESTAURANT_OR_CAFE", "TAKEAWAY", "STREET_FOOD_OR_MARKET_STALL", "RETAIL", "WHOLESALING", "SALONS", "NAIL_PARLOUR", "TATTOO_PARLOUR", "AT_HOME_SERVICES", "LICENSED_RETAIL", "LICENSED_FOOD_VENUE", "NEWSAGENTS_CONVENIENCE_STORES", "MOBILE_PHONE_SALES", "IMPORT_EXPORT", "AUCTION_HOUSE", "FIREARMS_MILITARY_GOODS", "GAMBLING_BETTING", "JEWELLERY_PRECIOUS_STONES_OR_METALS", "ANTIQUE_ART_DEALER", "DATING_ESCORT_SERVICES", "ADULT_INDUSTRY", "ILLEGAL_OR_UNLICENSED_DRUGS", "DROPSHIPPING", "RETAIL_BARS_AND_RESTAURANTS_OTHER", "HGV_OR_BUS_OR_COACH_DRIVER", "TAXI_OR_PRIVATE_HIRE_DRIVER", "TRAIN_DRIVER", "OTHER_PROFESSIONAL_DRIVER", "HOME_DELIVERY_AND_COURIER_FIRMS", "HAULAGE_FIRMS", "TAXI_OR_PRIVATE_HIRE_OPERATOR", "MINIBUS_OR_COACH_OPERATOR", "VEHICLE_REPAIR_AND_MAINTENANCE", "NEW_CARS_OR_VEHICLE_SALES", "VEHICLE_RENTAL", "BICYCLE_SHOPS", "USED_CAR_OR_VEHICLE_SALES", "VEHICLE_PARTS", "CAR_WASHING", "TRANSPORT_AND_VEHICLES_OTHER" ]
          },
          "businessCategoryDescriptions" : {
            "type" : "array",
            "description" : "Business category description",
            "items" : {
              "$ref" : "#/components/schemas/CategoryDescription"
            }
          },
          "businessSubCategoryDescriptions" : {
            "type" : "array",
            "description" : "Business subcategory description",
            "items" : {
              "$ref" : "#/components/schemas/CategoryDescription"
            }
          }
        },
        "description" : "Response object contain sole trader business details"
      },
      "SpendingCounterPartyBreakdown" : {
        "type" : "object",
        "properties" : {
          "counterPartyUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "68e16af4-c2c3-413b-bf93-1056b90097fa"
          },
          "counterPartyType" : {
            "type" : "string",
            "description" : "The type of counter party for a transaction",
            "example" : "MERCHANT",
            "enum" : [ "CATEGORY", "CHEQUE", "CUSTOMER", "PAYEE", "MERCHANT", "SENDER", "STARLING", "LOAN" ]
          },
          "counterPartyName" : {
            "type" : "string",
            "example" : "Tesco"
          },
          "totalSpent" : {
            "minimum" : 0,
            "type" : "number",
            "description" : "Amount spent at/sent to this counter party",
            "example" : 123.45
          },
          "totalReceived" : {
            "minimum" : 0,
            "type" : "number",
            "description" : "Amount received from this counter party",
            "example" : 23.45
          },
          "netSpend" : {
            "minimum" : 0,
            "type" : "number",
            "example" : 100.0
          },
          "netDirection" : {
            "type" : "string",
            "description" : "Was this an inbound or outbound transaction",
            "example" : "OUT",
            "enum" : [ "IN", "OUT" ]
          },
          "currency" : {
            "type" : "string",
            "example" : "GBP",
            "enum" : [ "UNDEFINED", "AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOV", "BRL", "BSD", "BTN", "BWP", "BYN", "BYR", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CUC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LTL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRO", "MRU", "MUR", "MVR", "MWK", "MXN", "MXV", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RUR", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SLE", "SOS", "SRD", "SSP", "STD", "STN", "SVC", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "USN", "USS", "UYI", "UYU", "UZS", "VEF", "VES", "VND", "VUV", "WST", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XCG", "XDR", "XOF", "XPD", "XPF", "XPT", "XSU", "XTS", "XUA", "XXX", "YER", "ZAR", "ZMW", "ZWL", "ZWG" ]
          },
          "percentage" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "number",
            "description" : "Percentage that the netSpend makes up of the sum of the netSpends of breakdowns in the same period with the same netDirection",
            "example" : 100.0
          },
          "transactionCount" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64",
            "example" : 4
          }
        },
        "description" : "Spending insights entry for a counter party"
      },
      "SpendingCounterPartySummary" : {
        "type" : "object",
        "properties" : {
          "period" : {
            "type" : "string",
            "example" : "2023-01"
          },
          "totalSpent" : {
            "type" : "number",
            "description" : "Amount spent from the account in the month",
            "example" : 1873.27
          },
          "totalReceived" : {
            "type" : "number",
            "description" : "Amount received to the account in the month",
            "example" : 3837.03
          },
          "netSpend" : {
            "type" : "number",
            "description" : "|totalReceived - totalSpent|, i.e. how much the balance has changed in the month",
            "example" : 1963.76
          },
          "totalSpendNetOut" : {
            "type" : "number",
            "description" : "Sum of netSpend for counter parties whose net direction for the month is OUT",
            "example" : 212.35
          },
          "totalReceivedNetIn" : {
            "type" : "number",
            "description" : "Sum of netSpend for counter parties whose net direction for the month is IN",
            "example" : 2176.11
          },
          "currency" : {
            "type" : "string",
            "example" : "GBP",
            "enum" : [ "UNDEFINED", "AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOV", "BRL", "BSD", "BTN", "BWP", "BYN", "BYR", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CUC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LTL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRO", "MRU", "MUR", "MVR", "MWK", "MXN", "MXV", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RUR", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SLE", "SOS", "SRD", "SSP", "STD", "STN", "SVC", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "USN", "USS", "UYI", "UYU", "UZS", "VEF", "VES", "VND", "VUV", "WST", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XCG", "XDR", "XOF", "XPD", "XPF", "XPT", "XSU", "XTS", "XUA", "XXX", "YER", "ZAR", "ZMW", "ZWL", "ZWG" ]
          },
          "direction" : {
            "type" : "string",
            "description" : "Was this an inbound or outbound transaction",
            "example" : "IN",
            "enum" : [ "IN", "OUT" ]
          },
          "breakdown" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SpendingCounterPartyBreakdown"
            }
          }
        },
        "description" : "Spending insights for a month, grouped by counter party"
      },
      "SpendingCategoryBreakdown" : {
        "type" : "object",
        "properties" : {
          "spendingCategory" : {
            "type" : "string",
            "description" : "The category of a transaction",
            "enum" : [ "BIKE", "BILLS_AND_SERVICES", "BUCKET_LIST", "CAR", "CASH", "CELEBRATION", "CHARITY", "CHILDREN", "CLOTHES", "COFFEE", "DEBT_REPAYMENT", "DIY", "DRINKS", "EATING_OUT", "EDUCATION", "EMERGENCY", "ENTERTAINMENT", "ESSENTIAL_SPEND", "EXPENSES", "FAMILY", "FITNESS", "FUEL", "GAMBLING", "GAMING", "GARDEN", "GENERAL", "GIFTS", "GROCERIES", "HOBBY", "HOLIDAYS", "HOME", "IMPULSE_BUY", "INCOME", "INSURANCE", "INVESTMENTS", "LIFESTYLE", "MAINTENANCE_AND_REPAIRS", "MEDICAL", "MORTGAGE", "NON_ESSENTIAL_SPEND", "PAYMENTS", "PERSONAL_CARE", "PERSONAL_TRANSFERS", "PETS", "PROJECTS", "RELATIONSHIPS", "RENT", "SAVING", "SHOPPING", "SUBSCRIPTIONS", "TAKEAWAY", "TAXI", "TRANSPORT", "TREATS", "WEDDING", "WELLBEING", "NONE", "REVENUE", "OTHER_INCOME", "CLIENT_REFUNDS", "INVENTORY", "STAFF", "TRAVEL", "WORKPLACE", "REPAIRS_AND_MAINTENANCE", "ADMIN", "MARKETING", "BUSINESS_ENTERTAINMENT", "INTEREST_PAYMENTS", "BANK_CHARGES", "OTHER", "FOOD_AND_DRINK", "EQUIPMENT", "PROFESSIONAL_SERVICES", "PHONE_AND_INTERNET", "VEHICLES", "DIRECTORS_WAGES", "VAT", "CORPORATION_TAX", "SELF_ASSESSMENT_TAX", "INVESTMENT_CAPITAL", "TRANSFERS", "LOAN_PRINCIPAL", "PERSONAL", "DIVIDENDS" ]
          },
          "totalSpent" : {
            "minimum" : 0,
            "type" : "number",
            "description" : "Amount spent under this spending category",
            "example" : 123.45
          },
          "totalReceived" : {
            "minimum" : 0,
            "type" : "number",
            "description" : "Amount received under this spending category",
            "example" : 23.45
          },
          "netSpend" : {
            "minimum" : 0,
            "type" : "number",
            "example" : 100.0
          },
          "netDirection" : {
            "type" : "string",
            "description" : "Was this an inbound or outbound transaction",
            "example" : "OUT",
            "enum" : [ "IN", "OUT" ]
          },
          "currency" : {
            "type" : "string",
            "example" : "GBP",
            "enum" : [ "UNDEFINED", "AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOV", "BRL", "BSD", "BTN", "BWP", "BYN", "BYR", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CUC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LTL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRO", "MRU", "MUR", "MVR", "MWK", "MXN", "MXV", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RUR", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SLE", "SOS", "SRD", "SSP", "STD", "STN", "SVC", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "USN", "USS", "UYI", "UYU", "UZS", "VEF", "VES", "VND", "VUV", "WST", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XCG", "XDR", "XOF", "XPD", "XPF", "XPT", "XSU", "XTS", "XUA", "XXX", "YER", "ZAR", "ZMW", "ZWL", "ZWG" ]
          },
          "percentage" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "number",
            "description" : "Percentage that the netSpend makes up of the sum of the netSpends of breakdowns in the same period with the same netDirection",
            "example" : 100.0
          },
          "transactionCount" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64",
            "example" : 4
          }
        },
        "description" : "Spending insights entry for a spending category"
      },
      "SpendingCategorySummary" : {
        "type" : "object",
        "properties" : {
          "period" : {
            "type" : "string",
            "example" : "2023-01"
          },
          "totalSpent" : {
            "type" : "number",
            "description" : "Amount spent from the account in the month",
            "example" : 1873.27
          },
          "totalReceived" : {
            "type" : "number",
            "description" : "Amount received to the account in the month",
            "example" : 3837.03
          },
          "netSpend" : {
            "type" : "number",
            "description" : "|totalReceived - totalSpent|, i.e. how much the balance has changed in the month",
            "example" : 1963.76
          },
          "totalSpendNetOut" : {
            "type" : "number",
            "description" : "Sum of netSpend for spending categories whose net direction for the month is OUT",
            "example" : 212.35
          },
          "totalReceivedNetIn" : {
            "type" : "number",
            "description" : "Sum of netSpend for spending categories whose net direction for the month is IN",
            "example" : 2176.11
          },
          "currency" : {
            "type" : "string",
            "example" : "GBP",
            "enum" : [ "UNDEFINED", "AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOV", "BRL", "BSD", "BTN", "BWP", "BYN", "BYR", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CUC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LTL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRO", "MRU", "MUR", "MVR", "MWK", "MXN", "MXV", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RUR", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SLE", "SOS", "SRD", "SSP", "STD", "STN", "SVC", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "USN", "USS", "UYI", "UYU", "UZS", "VEF", "VES", "VND", "VUV", "WST", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XCG", "XDR", "XOF", "XPD", "XPF", "XPT", "XSU", "XTS", "XUA", "XXX", "YER", "ZAR", "ZMW", "ZWL", "ZWG" ]
          },
          "direction" : {
            "type" : "string",
            "description" : "Was this an inbound or outbound transaction",
            "example" : "IN",
            "enum" : [ "IN", "OUT" ]
          },
          "breakdown" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SpendingCategoryBreakdown"
            }
          }
        },
        "description" : "Spending insights for a month, grouped by spending category"
      },
      "AccountHolder" : {
        "type" : "object",
        "properties" : {
          "accountHolderUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "aabbaabb-aabb-aabb-aabb-aabbaabbaabb"
          },
          "accountHolderType" : {
            "type" : "string",
            "enum" : [ "INDIVIDUAL", "BUSINESS", "SOLE_TRADER", "JOINT", "BANKING_AS_A_SERVICE" ]
          }
        },
        "description" : "Information about the account holder type"
      },
      "AccountHolderName" : {
        "type" : "object",
        "properties" : {
          "accountHolderName" : {
            "type" : "string",
            "example" : "Dave Bowman"
          }
        },
        "description" : "Name of the account holder"
      },
      "AddressesV2" : {
        "type" : "object",
        "properties" : {
          "current" : {
            "$ref" : "#/components/schemas/AddressV2"
          },
          "previous" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddressV2"
            }
          }
        },
        "description" : "Current and previous physical addresses"
      },
      "AddressUpdateRequest" : {
        "required" : [ "countryCode", "from", "line1", "postCode", "postTown" ],
        "type" : "object",
        "properties" : {
          "line1" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string",
            "example" : "1A Admiralty Arch"
          },
          "line2" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string",
            "example" : "The Mall"
          },
          "line3" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string",
            "example" : "City of Westminster"
          },
          "postTown" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string",
            "example" : "London"
          },
          "postCode" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "example" : "SW1A 2WH"
          },
          "countryCode" : {
            "type" : "string",
            "description" : "Country code in ISO 3166-1 alpha-2. NB GB is the official country code for the UK. UK is not the officially assigned code, and so is not valid",
            "example" : "GB"
          },
          "udprn" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string",
            "description" : "The UDPRN of the property",
            "example" : "23748063"
          },
          "umprn" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string",
            "description" : "The UMPRN of the property",
            "example" : "923827402"
          },
          "from" : {
            "type" : "string",
            "description" : "Date the account holder's residency at this address started",
            "format" : "date",
            "example" : "2023-01-01"
          }
        },
        "description" : "Address update request"
      },
      "Enabling" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          }
        }
      },
      "CurrencyFlag" : {
        "required" : [ "currency", "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "currency" : {
            "minLength" : 1,
            "type" : "string"
          }
        },
        "description" : "Whether spending is enabled on this card for the specified currency"
      },
      "Card" : {
        "required" : [ "activated", "activationRequested", "atmEnabled", "cancelled", "cardAssociationUid", "cardUid", "currencyFlags", "enabled", "endOfCardNumber", "gamblingEnabled", "magStripeEnabled", "mobileWalletEnabled", "onlineEnabled", "posEnabled", "publicToken", "walletNotificationEnabled" ],
        "type" : "object",
        "properties" : {
          "cardUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "ddeeddee-ddee-ddee-ddee-ddeeddeeddee"
          },
          "publicToken" : {
            "minLength" : 1,
            "type" : "string",
            "example" : "123456789"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "walletNotificationEnabled" : {
            "type" : "boolean"
          },
          "posEnabled" : {
            "type" : "boolean"
          },
          "atmEnabled" : {
            "type" : "boolean"
          },
          "onlineEnabled" : {
            "type" : "boolean"
          },
          "mobileWalletEnabled" : {
            "type" : "boolean"
          },
          "gamblingEnabled" : {
            "type" : "boolean"
          },
          "magStripeEnabled" : {
            "type" : "boolean"
          },
          "cancelled" : {
            "type" : "boolean"
          },
          "activationRequested" : {
            "type" : "boolean"
          },
          "activated" : {
            "type" : "boolean"
          },
          "endOfCardNumber" : {
            "type" : "string",
            "example" : "59312"
          },
          "currencyFlags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CurrencyFlag"
            }
          },
          "cardAssociationUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          },
          "gamblingToBeEnabledAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : "Information about card"
      },
      "Cards" : {
        "required" : [ "cards" ],
        "type" : "object",
        "properties" : {
          "cards" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Card"
            }
          }
        },
        "description" : "Wrapper around multiple cards"
      },
      "CurrencyAndAmount" : {
        "required" : [ "currency", "minorUnits" ],
        "type" : "object",
        "properties" : {
          "currency" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "ISO-4217 3 character currency code",
            "example" : "GBP"
          },
          "minorUnits" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Amount in the minor units of the given currency; eg pence in GBP, cents in EUR",
            "format" : "int64",
            "example" : 123456
          }
        },
        "description" : "Representation of money"
      },
      "DirectDebitMandateV2" : {
        "type" : "object",
        "properties" : {
          "uid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "eeffeeff-eeff-eeff-eeff-eeffeeffeeff"
          },
          "reference" : {
            "type" : "string",
            "example" : "Accommodation"
          },
          "status" : {
            "type" : "string",
            "example" : "LIVE",
            "enum" : [ "CANCELLED", "LIVE", "PENDING_CAS" ]
          },
          "source" : {
            "type" : "string",
            "example" : "ELECTRONIC",
            "enum" : [ "ELECTRONIC", "PAPER" ]
          },
          "created" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-04-16T11:47:50.477Z"
          },
          "cancelled" : {
            "type" : "string",
            "format" : "date-time"
          },
          "nextDate" : {
            "type" : "string",
            "format" : "date",
            "example" : "2020-04-16"
          },
          "lastDate" : {
            "type" : "string",
            "format" : "date",
            "example" : "2020-03-16"
          },
          "originatorName" : {
            "type" : "string",
            "example" : "University Of Warwick"
          },
          "originatorUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "ff11ff11-ff11-ff11-ff11-ff11ff11ff11"
          },
          "merchantUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "80ba691d-10a6-432c-90be-6ceaf932410e"
          },
          "lastPayment" : {
            "$ref" : "#/components/schemas/LastPayment"
          },
          "accountUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "323ac478-11a7-232d-90ae-7ceaf832330e"
          },
          "categoryUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : null
          }
        },
        "description" : "Single mandate"
      },
      "LastPayment" : {
        "type" : "object",
        "properties" : {
          "lastDate" : {
            "type" : "string",
            "format" : "date",
            "example" : "2020-03-16"
          },
          "lastAmount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          }
        },
        "description" : "Last direct debit payment",
        "nullable" : true
      },
      "DirectDebitMandatesV2" : {
        "type" : "object",
        "properties" : {
          "mandates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DirectDebitMandateV2"
            }
          }
        },
        "description" : "List of mandates"
      },
      "DirectDebitPayment" : {
        "type" : "object",
        "properties" : {
          "paymentAmount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "createdAt" : {
            "type" : "string",
            "description" : "Date when direct debit payment was created",
            "format" : "date-time"
          }
        },
        "description" : "A previous Direct Debit payment"
      },
      "DirectDebitPaymentsResponse" : {
        "required" : [ "directDebitPayments" ],
        "type" : "object",
        "properties" : {
          "directDebitPayments" : {
            "type" : "array",
            "description" : "List of processed direct debit mandate payments",
            "items" : {
              "$ref" : "#/components/schemas/DirectDebitPayment"
            }
          }
        },
        "description" : "Transaction history for a direct debit"
      },
      "UpdateSpendingCategory" : {
        "required" : [ "spendingCategory" ],
        "type" : "object",
        "properties" : {
          "spendingCategory" : {
            "type" : "string",
            "description" : "The category of a transaction",
            "example" : "GROCERIES",
            "enum" : [ "BIKE", "BILLS_AND_SERVICES", "BUCKET_LIST", "CAR", "CASH", "CELEBRATION", "CHARITY", "CHILDREN", "CLOTHES", "COFFEE", "DEBT_REPAYMENT", "DIY", "DRINKS", "EATING_OUT", "EDUCATION", "EMERGENCY", "ENTERTAINMENT", "ESSENTIAL_SPEND", "EXPENSES", "FAMILY", "FITNESS", "FUEL", "GAMBLING", "GAMING", "GARDEN", "GENERAL", "GIFTS", "GROCERIES", "HOBBY", "HOLIDAYS", "HOME", "IMPULSE_BUY", "INCOME", "INSURANCE", "INVESTMENTS", "LIFESTYLE", "MAINTENANCE_AND_REPAIRS", "MEDICAL", "MORTGAGE", "NON_ESSENTIAL_SPEND", "PAYMENTS", "PERSONAL_CARE", "PERSONAL_TRANSFERS", "PETS", "PROJECTS", "RELATIONSHIPS", "RENT", "SAVING", "SHOPPING", "SUBSCRIPTIONS", "TAKEAWAY", "TAXI", "TRANSPORT", "TREATS", "WEDDING", "WELLBEING", "NONE", "REVENUE", "OTHER_INCOME", "CLIENT_REFUNDS", "INVENTORY", "STAFF", "TRAVEL", "WORKPLACE", "REPAIRS_AND_MAINTENANCE", "ADMIN", "MARKETING", "BUSINESS_ENTERTAINMENT", "INTEREST_PAYMENTS", "BANK_CHARGES", "OTHER", "FOOD_AND_DRINK", "EQUIPMENT", "PROFESSIONAL_SERVICES", "PHONE_AND_INTERNET", "VEHICLES", "DIRECTORS_WAGES", "VAT", "CORPORATION_TAX", "SELF_ASSESSMENT_TAX", "INVESTMENT_CAPITAL", "TRANSFERS", "LOAN_PRINCIPAL", "PERSONAL", "DIVIDENDS" ]
          },
          "permanentSpendingCategoryUpdate" : {
            "type" : "boolean",
            "example" : false
          },
          "previousSpendingCategoryReferencesUpdate" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "ReceiptCreationResponse" : {
        "type" : "object",
        "properties" : {
          "receiptUid" : {
            "type" : "string",
            "description" : "The UUID of the created receipt. This UUID could be used for updating the receipt at a later point.",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        },
        "description" : "Response after creating or updating a receipt"
      },
      "Receipt" : {
        "required" : [ "items", "metadataSource", "paymentMethods", "receiptIdentifier", "receiptMerchant", "totalAmount" ],
        "type" : "object",
        "properties" : {
          "receiptUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "7f03a13a-bbfc-4479-8d4d-abb6a9119d27"
          },
          "feedItemUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "5e03a13a-bbfc-4479-8d4d-abb6a9119d27"
          },
          "metadataSource" : {
            "type" : "string",
            "example" : "PARTNER",
            "enum" : [ "CUSTOMER", "STARLING", "PARTNER" ]
          },
          "receiptIdentifier" : {
            "minLength" : 1,
            "type" : "string",
            "example" : "0987654321"
          },
          "totalAmount" : {
            "type" : "number",
            "example" : 10.65
          },
          "receiptMerchant" : {
            "$ref" : "#/components/schemas/ReceiptMerchant"
          },
          "currencyCode" : {
            "type" : "string",
            "description" : "ISO-4217 3 character currency code",
            "example" : "GBP",
            "enum" : [ "UNDEFINED", "AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOV", "BRL", "BSD", "BTN", "BWP", "BYN", "BYR", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CUC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LTL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRO", "MRU", "MUR", "MVR", "MWK", "MXN", "MXV", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RUR", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SLE", "SOS", "SRD", "SSP", "STD", "STN", "SVC", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "USN", "USS", "UYI", "UYU", "UZS", "VEF", "VES", "VND", "VUV", "WST", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XCG", "XDR", "XOF", "XPD", "XPF", "XPT", "XSU", "XTS", "XUA", "XXX", "YER", "ZAR", "ZMW", "ZWL", "ZWG" ]
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReceiptItem"
            }
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReceiptNote"
            }
          },
          "taxDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReceiptTaxDetail"
            }
          },
          "paymentMethods" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReceiptPaymentMethod"
            }
          },
          "providerName" : {
            "type" : "string",
            "example" : "Receipt App"
          }
        },
        "description" : "Transaction receipt"
      },
      "ReceiptItem" : {
        "required" : [ "amount", "description", "tax" ],
        "type" : "object",
        "properties" : {
          "receiptItemUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "6f03a13a-bbfc-4479-8d4d-abb6a9119d27"
          },
          "description" : {
            "minLength" : 1,
            "type" : "string",
            "example" : "Large Cappuccino"
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 2
          },
          "amount" : {
            "type" : "number",
            "example" : 4.86
          },
          "tax" : {
            "type" : "number",
            "example" : 0.76
          },
          "url" : {
            "type" : "string",
            "example" : "http://www.example.com"
          },
          "creationTime" : {
            "type" : "string",
            "description" : "The time the receipt item was created",
            "format" : "date-time",
            "example" : "2020-05-04T12:05:40.457Z"
          },
          "type" : {
            "type" : "string",
            "description" : "Type of receipt item. It can be PURCHASE, SERVICE_FEE, GRATUITY or null",
            "example" : "PURCHASE",
            "enum" : [ "PURCHASE", "SERVICE_FEE", "GRATUITY", "BALANCE_ADJUSTMENT" ]
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "subItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReceiptSubItem"
            }
          }
        }
      },
      "ReceiptMerchant" : {
        "type" : "object",
        "properties" : {
          "receiptMerchantUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "08bc37ff-7130-4c7e-b8d4-8824950de73d"
          },
          "identifier" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string",
            "example" : "Costa"
          },
          "address" : {
            "type" : "string",
            "example" : "2 Finsbury Avenue, London, EC2M 2PP"
          },
          "emailAddress" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string",
            "example" : "help@merchant.co.uk"
          },
          "logoUrl" : {
            "type" : "string",
            "example" : "https://example.com/logo.png"
          },
          "orderCollectionNumber" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "example" : "123"
          },
          "taxNumber" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "example" : "1234567890"
          }
        },
        "description" : "Receipt Merchant Information"
      },
      "ReceiptNote" : {
        "required" : [ "description" ],
        "type" : "object",
        "properties" : {
          "noteUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "6f03a13a-bbfc-4479-8d4d-abb6a9119d27"
          },
          "title" : {
            "type" : "string",
            "example" : "Special Offer"
          },
          "description" : {
            "minLength" : 1,
            "type" : "string",
            "example" : "Get 10% OFF your next purchase with this receipt"
          },
          "url" : {
            "type" : "string",
            "example" : "http://www.example.com"
          }
        },
        "description" : "Note associated with a receipt"
      },
      "ReceiptPaymentMethod" : {
        "required" : [ "amount", "description" ],
        "type" : "object",
        "properties" : {
          "paymentMethodUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "1c164584-763b-4d69-bd01-a5c583f7ca25"
          },
          "description" : {
            "minLength" : 1,
            "type" : "string",
            "example" : "Card Payment"
          },
          "amount" : {
            "type" : "number",
            "example" : 14.99
          }
        }
      },
      "ReceiptSubItem" : {
        "required" : [ "description" ],
        "type" : "object",
        "properties" : {
          "receiptSubItemUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          },
          "description" : {
            "minLength" : 1,
            "type" : "string",
            "example" : "6f03a13a-bbfc-4479-8d4d-abb6a9119d27"
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 2
          },
          "amount" : {
            "type" : "number",
            "example" : 4.86
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ReceiptTaxDetail" : {
        "required" : [ "taxCurrencyCode", "taxName", "taxValue" ],
        "type" : "object",
        "properties" : {
          "receiptTaxDetailUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "6f03a13a-bbfc-4479-8d4d-abb6a9119d27"
          },
          "taxName" : {
            "type" : "string",
            "example" : "Sales Tax"
          },
          "taxValue" : {
            "type" : "number",
            "example" : 20.0
          },
          "taxCurrencyCode" : {
            "type" : "string",
            "example" : "GBP",
            "enum" : [ "UNDEFINED", "AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOV", "BRL", "BSD", "BTN", "BWP", "BYN", "BYR", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CUC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LTL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRO", "MRU", "MUR", "MVR", "MWK", "MXN", "MXV", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RUR", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SLE", "SOS", "SRD", "SSP", "STD", "STN", "SVC", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "USN", "USS", "UYI", "UYU", "UZS", "VEF", "VES", "VND", "VUV", "WST", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XCG", "XDR", "XOF", "XPD", "XPF", "XPT", "XSU", "XTS", "XUA", "XXX", "YER", "ZAR", "ZMW", "ZWL", "ZWG" ]
          },
          "creationTime" : {
            "type" : "string",
            "description" : "The time the tax detail was created",
            "format" : "date-time",
            "example" : "2020-05-04T12:05:40.457Z"
          }
        },
        "description" : "Tax detail associated with a receipt"
      },
      "AssociatedFeedRoundUp" : {
        "type" : "object",
        "properties" : {
          "goalCategoryUid" : {
            "type" : "string",
            "description" : "Unique identifier of associated category",
            "format" : "uuid",
            "example" : "68e16af4-c2c3-413b-bf93-1056b90097fa"
          },
          "amount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          }
        },
        "description" : "Round up details associated with a feed item"
      },
      "BatchPaymentDetails" : {
        "type" : "object",
        "properties" : {
          "batchPaymentUid" : {
            "type" : "string",
            "description" : "The unique identifier for the batch payment",
            "format" : "uuid",
            "example" : "5fedd7fa-c670-4ca8-9fcb-a77a6f2219c5"
          },
          "batchPaymentType" : {
            "type" : "string",
            "description" : "The type of the batch payment itself",
            "enum" : [ "BULK_PAYMENT" ]
          }
        },
        "description" : "The details of the batch payment this is part of, if it is"
      },
      "FeedItem" : {
        "type" : "object",
        "properties" : {
          "feedItemUid" : {
            "type" : "string",
            "description" : "Unique identifier for this item",
            "format" : "uuid",
            "example" : "11221122-1122-1122-1122-112211221122"
          },
          "categoryUid" : {
            "type" : "string",
            "description" : "The category on which the transaction happened",
            "format" : "uuid",
            "example" : "ccddccdd-ccdd-ccdd-ccdd-ccddccddccdd"
          },
          "amount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "sourceAmount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "direction" : {
            "type" : "string",
            "description" : "Was this an inbound or outbound transaction",
            "enum" : [ "IN", "OUT" ]
          },
          "updatedAt" : {
            "type" : "string",
            "description" : "The time the transaction was last updated at",
            "format" : "date-time"
          },
          "transactionTime" : {
            "type" : "string",
            "description" : "The time of the transaction",
            "format" : "date-time"
          },
          "settlementTime" : {
            "type" : "string",
            "description" : "The time the transaction settled",
            "format" : "date-time"
          },
          "retryAllocationUntilTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "source" : {
            "type" : "string",
            "description" : "The source of a transaction",
            "example" : "MASTER_CARD",
            "enum" : [ "BRITISH_BUSINESS_BANK_FEES", "CARD_FEE_CHARGE", "CASH_DEPOSIT", "CASH_DEPOSIT_CHARGE", "CASH_WITHDRAWAL", "CASH_WITHDRAWAL_CHARGE", "CHAPS", "CHEQUE", "CICS_CHEQUE", "CURRENCY_CLOUD", "DIRECT_CREDIT", "DIRECT_DEBIT", "DIRECT_DEBIT_DISPUTE", "INTERNAL_TRANSFER", "MASTER_CARD", "MASTERCARD_MONEYSEND", "MASTERCARD_CHARGEBACK", "MISSED_PAYMENT_FEE", "FASTER_PAYMENTS_IN", "FASTER_PAYMENTS_OUT", "FASTER_PAYMENTS_REVERSAL", "STRIPE_FUNDING", "INTEREST_PAYMENT", "NOSTRO_DEPOSIT", "OVERDRAFT", "OVERDRAFT_INTEREST_WAIVED", "FASTER_PAYMENTS_REFUND", "STARLING_PAY_STRIPE", "ON_US_PAY_ME", "LOAN_PRINCIPAL_PAYMENT", "LOAN_REPAYMENT", "LOAN_OVERPAYMENT", "LOAN_LATE_PAYMENT", "LOAN_FEE_PAYMENT", "LOAN_INTEREST_CHARGE", "SEPA_CREDIT_TRANSFER", "SEPA_DIRECT_DEBIT", "TARGET2_CUSTOMER_PAYMENT", "FX_TRANSFER", "ISS_PAYMENT", "STARLING_PAYMENT", "SUBSCRIPTION_CHARGE", "OVERDRAFT_FEE", "WITHHELD_TAX", "ERRORS_AND_OMISSIONS", "INTEREST_V2_PAYMENT" ]
          },
          "sourceSubType" : {
            "type" : "string",
            "description" : "The source subtype of the transaction",
            "example" : "CONTACTLESS",
            "enum" : [ "CONTACTLESS", "MAGNETIC_STRIP", "MANUAL_KEY_ENTRY", "CHIP_AND_PIN", "ONLINE", "ATM", "CREDIT_AUTH", "APPLE_PAY", "APPLE_PAY_ONLINE", "ANDROID_PAY", "ANDROID_PAY_ONLINE", "FITBIT_PAY", "GARMIN_PAY", "SAMSUNG_PAY", "CLICK_TO_PAY", "OTHER_WALLET", "CARD_SUBSCRIPTION", "NOT_APPLICABLE", "UNKNOWN", "DEPOSIT", "OVERDRAFT", "SETTLE_UP", "NEARBY", "TRANSFER_SAME_CURRENCY", "NEW_CARD", "NEW_CARD_OVERSEAS" ]
          },
          "status" : {
            "type" : "string",
            "description" : "The status of a transaction",
            "example" : "PENDING",
            "enum" : [ "UPCOMING", "UPCOMING_CANCELLED", "PENDING", "REVERSED", "SETTLED", "DECLINED", "REFUNDED", "RETRYING", "ACCOUNT_CHECK" ]
          },
          "transactingApplicationUserUid" : {
            "type" : "string",
            "description" : "The application user that made the transaction",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          },
          "counterPartyType" : {
            "type" : "string",
            "description" : "The type of counter party for a transaction",
            "example" : "MERCHANT",
            "enum" : [ "CATEGORY", "CHEQUE", "CUSTOMER", "PAYEE", "MERCHANT", "SENDER", "STARLING", "LOAN" ]
          },
          "counterPartyUid" : {
            "type" : "string",
            "description" : "The unique identifier for the counter party. eg for MERCHANT this will be the merchant uid, for PAYEE this will be the payee uid",
            "format" : "uuid",
            "example" : "68e16af4-c2c3-413b-bf93-1056b90097fa"
          },
          "counterPartyName" : {
            "type" : "string",
            "description" : "The name of the counter party",
            "example" : "Tesco"
          },
          "counterPartySubEntityUid" : {
            "type" : "string",
            "description" : "An identifier for the counter party sub entity. eg for MERCHANT this will be the merchant location uid, for PAYEE this will be the payee account uid",
            "format" : "uuid",
            "example" : "35d46207-d90e-483c-a40a-128cc4da4bee"
          },
          "counterPartySubEntityName" : {
            "type" : "string",
            "description" : "A name for the counter party sub entity, for PAYEE this will be the name set for the payee account",
            "example" : "Tesco Southampton"
          },
          "counterPartySubEntityIdentifier" : {
            "type" : "string",
            "description" : "An external identifier for the sub entity, for PAYEE this will be the sort code of the account",
            "example" : "608371"
          },
          "counterPartySubEntitySubIdentifier" : {
            "type" : "string",
            "description" : "An external sub identifier for the sub entity, for PAYEE this will be the account number of the account",
            "example" : "01234567"
          },
          "exchangeRate" : {
            "type" : "number"
          },
          "totalFees" : {
            "type" : "number"
          },
          "totalFeeAmount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "reference" : {
            "type" : "string",
            "description" : "The reference for the transaction",
            "example" : "TESCO-STORES-6148      SOUTHAMPTON   GBR"
          },
          "country" : {
            "type" : "string",
            "description" : "The country in which the transaction took place. ISO 3166-1 alpha-2",
            "example" : "GB",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "XX", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "spendingCategory" : {
            "type" : "string",
            "description" : "The category of a transaction",
            "example" : "GROCERIES",
            "enum" : [ "BIKE", "BILLS_AND_SERVICES", "BUCKET_LIST", "CAR", "CASH", "CELEBRATION", "CHARITY", "CHILDREN", "CLOTHES", "COFFEE", "DEBT_REPAYMENT", "DIY", "DRINKS", "EATING_OUT", "EDUCATION", "EMERGENCY", "ENTERTAINMENT", "ESSENTIAL_SPEND", "EXPENSES", "FAMILY", "FITNESS", "FUEL", "GAMBLING", "GAMING", "GARDEN", "GENERAL", "GIFTS", "GROCERIES", "HOBBY", "HOLIDAYS", "HOME", "IMPULSE_BUY", "INCOME", "INSURANCE", "INVESTMENTS", "LIFESTYLE", "MAINTENANCE_AND_REPAIRS", "MEDICAL", "MORTGAGE", "NON_ESSENTIAL_SPEND", "PAYMENTS", "PERSONAL_CARE", "PERSONAL_TRANSFERS", "PETS", "PROJECTS", "RELATIONSHIPS", "RENT", "SAVING", "SHOPPING", "SUBSCRIPTIONS", "TAKEAWAY", "TAXI", "TRANSPORT", "TREATS", "WEDDING", "WELLBEING", "NONE", "REVENUE", "OTHER_INCOME", "CLIENT_REFUNDS", "INVENTORY", "STAFF", "TRAVEL", "WORKPLACE", "REPAIRS_AND_MAINTENANCE", "ADMIN", "MARKETING", "BUSINESS_ENTERTAINMENT", "INTEREST_PAYMENTS", "BANK_CHARGES", "OTHER", "FOOD_AND_DRINK", "EQUIPMENT", "PROFESSIONAL_SERVICES", "PHONE_AND_INTERNET", "VEHICLES", "DIRECTORS_WAGES", "VAT", "CORPORATION_TAX", "SELF_ASSESSMENT_TAX", "INVESTMENT_CAPITAL", "TRANSFERS", "LOAN_PRINCIPAL", "PERSONAL", "DIVIDENDS" ]
          },
          "userNote" : {
            "type" : "string",
            "description" : "The user-provided transaction note",
            "example" : "Tax deductable, submit me to payroll"
          },
          "roundUp" : {
            "$ref" : "#/components/schemas/AssociatedFeedRoundUp"
          },
          "hasAttachment" : {
            "type" : "boolean",
            "description" : "Attachment present",
            "example" : true
          },
          "hasReceipt" : {
            "type" : "boolean",
            "description" : "Receipt present",
            "example" : true
          },
          "batchPaymentDetails" : {
            "$ref" : "#/components/schemas/BatchPaymentDetails"
          }
        },
        "description" : "An item from the account holders's transaction feed"
      },
      "FeedItemAttachment" : {
        "type" : "object",
        "properties" : {
          "feedItemUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "22332233-2233-2233-2233-223322332233"
          },
          "feedItemAttachmentUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "11221122-1122-1122-1122-112211221122"
          },
          "attachmentType" : {
            "type" : "string",
            "example" : "image",
            "enum" : [ "image, pdf" ]
          },
          "feedItemAttachmentType" : {
            "type" : "string",
            "example" : "IMAGE",
            "enum" : [ "IMAGE", "PDF", "IMAGE, PDF" ]
          }
        }
      },
      "FeedItemAttachments" : {
        "type" : "object",
        "properties" : {
          "feedItemAttachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeedItemAttachment"
            }
          }
        }
      },
      "LocalTime" : {
        "type" : "object",
        "properties" : {
          "hour" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minute" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nano" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "MastercardFeedItem" : {
        "type" : "object",
        "properties" : {
          "merchantIdentifier" : {
            "type" : "string"
          },
          "mcc" : {
            "type" : "integer",
            "format" : "int32"
          },
          "posTimestamp" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "authorisationCode" : {
            "type" : "string"
          },
          "cardLast4" : {
            "type" : "string"
          }
        }
      },
      "FeedItems" : {
        "type" : "object",
        "properties" : {
          "feedItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeedItem"
            }
          }
        },
        "description" : "Wrapper around multiple feed items"
      },
      "UserNoteWrapper" : {
        "required" : [ "userNote" ],
        "type" : "object",
        "properties" : {
          "userNote" : {
            "type" : "string",
            "example" : "Submitted for tax rebate"
          }
        }
      },
      "RoundUpGoalPayload" : {
        "required" : [ "roundUpGoalUid", "roundUpMultiplier" ],
        "type" : "object",
        "properties" : {
          "roundUpGoalUid" : {
            "type" : "string",
            "description" : "UID of the account category to send round-ups to",
            "format" : "uuid",
            "example" : "77887788-7788-7788-7788-778877887788"
          },
          "roundUpMultiplier" : {
            "maximum" : 10,
            "minimum" : 1,
            "type" : "integer",
            "description" : "How much to multiply the rounded-up amount by before transfer. Must be an integer between 1 and 10 (inclusive)",
            "format" : "int32",
            "example" : 2
          }
        }
      },
      "RoundUpGoalDetails" : {
        "required" : [ "activatedAt", "activatedBy", "primaryCategoryUid", "roundUpGoalUid", "roundUpMultiplier" ],
        "type" : "object",
        "properties" : {
          "primaryCategoryUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          },
          "roundUpGoalUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          },
          "roundUpMultiplier" : {
            "minimum" : 1.0,
            "exclusiveMinimum" : false,
            "type" : "number"
          },
          "activatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "activatedBy" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }
      },
      "RoundUpGoalResponse" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "roundUpGoal" : {
            "$ref" : "#/components/schemas/RoundUpGoalDetails"
          },
          "roundUpGoalDetails" : {
            "$ref" : "#/components/schemas/RoundUpGoalDetails"
          }
        }
      },
      "IdentityV2" : {
        "type" : "object",
        "properties" : {
          "accountHolderUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "aabbaabb-aabb-aabb-aabb-aabbaabbaabb"
          },
          "expiresAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "expiresInSeconds" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 123
          },
          "scopes" : {
            "type" : "array",
            "description" : "The scopes which this token has permission to use e.g. balance:read",
            "items" : {
              "type" : "string",
              "description" : "The scopes which this token has permission to use e.g. balance:read"
            }
          },
          "authenticated" : {
            "type" : "boolean"
          },
          "applicationUserUid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "aabbaabb-aabb-aabb-aabb-aabbaabbaabb"
          },
          "consentExpiresAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "customerUid" : {
            "type" : "string",
            "description" : "Deprecated, use accountHolderUid instead",
            "format" : "uuid",
            "example" : "aabbaabb-aabb-aabb-aabb-aabbaabbaabb",
            "deprecated" : true
          }
        }
      },
      "CreateStandingOrderResponse" : {
        "type" : "object",
        "properties" : {
          "paymentOrderUid" : {
            "type" : "string",
            "description" : "The uid of the payment order created by the standing order. N.B. this will not be the uid of any payment which is created by the standing order",
            "format" : "uuid",
            "example" : "33443344-3344-3344-3344-334433443344"
          }
        },
        "description" : "Response after attempting to create a standing order"
      },
      "CreateStandingOrderRequest" : {
        "required" : [ "amount", "externalIdentifier", "reference", "standingOrderRecurrence" ],
        "type" : "object",
        "properties" : {
          "externalIdentifier" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "External identifier for the standing order request",
            "example" : "a unique identifier to ensure idempotency"
          },
          "destinationPayeeAccountUid" : {
            "type" : "string",
            "description" : "The desired payment recipient. Either paymentRecipient or destinationPayeeAccountUid must be present",
            "format" : "uuid",
            "example" : "66776677-6677-6677-6677-667766776677"
          },
          "paymentRecipient" : {
            "$ref" : "#/components/schemas/PaymentRecipient"
          },
          "reference" : {
            "maxLength" : 18,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9-/?:().,+#=!%&*<>;{@ \"']{1,18}",
            "type" : "string",
            "description" : "The payment reference",
            "example" : "Monthly Expenses"
          },
          "amount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "standingOrderRecurrence" : {
            "$ref" : "#/components/schemas/StandingOrderRecurrence"
          },
          "spendingCategory" : {
            "type" : "string",
            "description" : "The category of a transaction",
            "enum" : [ "BIKE", "BILLS_AND_SERVICES", "BUCKET_LIST", "CAR", "CASH", "CELEBRATION", "CHARITY", "CHILDREN", "CLOTHES", "COFFEE", "DEBT_REPAYMENT", "DIY", "DRINKS", "EATING_OUT", "EDUCATION", "EMERGENCY", "ENTERTAINMENT", "ESSENTIAL_SPEND", "EXPENSES", "FAMILY", "FITNESS", "FUEL", "GAMBLING", "GAMING", "GARDEN", "GENERAL", "GIFTS", "GROCERIES", "HOBBY", "HOLIDAYS", "HOME", "IMPULSE_BUY", "INCOME", "INSURANCE", "INVESTMENTS", "LIFESTYLE", "MAINTENANCE_AND_REPAIRS", "MEDICAL", "MORTGAGE", "NON_ESSENTIAL_SPEND", "PAYMENTS", "PERSONAL_CARE", "PERSONAL_TRANSFERS", "PETS", "PROJECTS", "RELATIONSHIPS", "RENT", "SAVING", "SHOPPING", "SUBSCRIPTIONS", "TAKEAWAY", "TAXI", "TRANSPORT", "TREATS", "WEDDING", "WELLBEING", "NONE", "REVENUE", "OTHER_INCOME", "CLIENT_REFUNDS", "INVENTORY", "STAFF", "TRAVEL", "WORKPLACE", "REPAIRS_AND_MAINTENANCE", "ADMIN", "MARKETING", "BUSINESS_ENTERTAINMENT", "INTEREST_PAYMENTS", "BANK_CHARGES", "OTHER", "FOOD_AND_DRINK", "EQUIPMENT", "PROFESSIONAL_SERVICES", "PHONE_AND_INTERNET", "VEHICLES", "DIRECTORS_WAGES", "VAT", "CORPORATION_TAX", "SELF_ASSESSMENT_TAX", "INVESTMENT_CAPITAL", "TRANSFERS", "LOAN_PRINCIPAL", "PERSONAL", "DIVIDENDS" ]
          }
        },
        "description" : "Request to create a standing order"
      },
      "PaymentRecipient" : {
        "required" : [ "accountIdentifier", "bankIdentifier", "bankIdentifierType", "countryCode", "payeeName", "payeeType" ],
        "type" : "object",
        "properties" : {
          "payeeName" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string",
            "example" : "Bob Smith"
          },
          "payeeType" : {
            "type" : "string",
            "example" : "INDIVIDUAL",
            "enum" : [ "BUSINESS", "INDIVIDUAL" ]
          },
          "countryCode" : {
            "type" : "string",
            "description" : "The country code for the account (ISO 3166-1 alpha-2)",
            "example" : "GB"
          },
          "accountIdentifier" : {
            "maxLength" : 34,
            "minLength" : 0,
            "type" : "string",
            "example" : "12345678"
          },
          "bankIdentifier" : {
            "maxLength" : 34,
            "minLength" : 0,
            "type" : "string",
            "example" : "123456"
          },
          "bankIdentifierType" : {
            "type" : "string",
            "example" : "SORT_CODE",
            "enum" : [ "SORT_CODE", "SWIFT", "IBAN", "ABA", "ABA_WIRE", "ABA_ACH", "BSB" ]
          }
        },
        "description" : "The desired payment recipient. Either paymentRecipient or destinationPayeeAccountUid must be present"
      },
      "StandingOrderRecurrence" : {
        "required" : [ "frequency", "startDate" ],
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "description" : "Date that the first standing order payment should be made",
            "format" : "date",
            "example" : "2019-09-23"
          },
          "frequency" : {
            "type" : "string",
            "description" : "Frequency of which payments should be made",
            "example" : "WEEKLY",
            "enum" : [ "DAILY", "WEEKLY", "MONTHLY", "YEARLY" ]
          },
          "interval" : {
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Interval of specified frequency on which payments should be made",
            "format" : "int32",
            "nullable" : true,
            "example" : 4
          },
          "count" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of payments that should be made before standing order is stopped",
            "format" : "int32",
            "nullable" : true,
            "example" : 12
          },
          "untilDate" : {
            "type" : "string",
            "description" : "Date on which to stop standing order",
            "format" : "date",
            "example" : "2020-09-23"
          }
        },
        "description" : "Recurrence rules of a standing order"
      },
      "PaymentOrderV2" : {
        "required" : [ "amount", "payeeAccountUid", "payeeUid", "paymentOrderUid", "reference" ],
        "type" : "object",
        "properties" : {
          "paymentOrderUid" : {
            "type" : "string",
            "description" : "UID of this payment order",
            "format" : "uuid",
            "example" : "33443344-3344-3344-3344-334433443344"
          },
          "amount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "reference" : {
            "type" : "string",
            "description" : "The reference set by the payer",
            "example" : "Payment reference"
          },
          "payeeUid" : {
            "type" : "string",
            "description" : "The ID of the payee receiving this payment",
            "format" : "uuid",
            "example" : "55665566-5566-5566-5566-556655665566"
          },
          "payeeAccountUid" : {
            "type" : "string",
            "description" : "The account ID of the payee account receiving this payment",
            "format" : "uuid",
            "example" : "66776677-6677-6677-6677-667766776677"
          },
          "spendingCategory" : {
            "type" : "string",
            "description" : "The category of a transaction",
            "nullable" : true,
            "enum" : [ "BIKE", "BILLS_AND_SERVICES", "BUCKET_LIST", "CAR", "CASH", "CELEBRATION", "CHARITY", "CHILDREN", "CLOTHES", "COFFEE", "DEBT_REPAYMENT", "DIY", "DRINKS", "EATING_OUT", "EDUCATION", "EMERGENCY", "ENTERTAINMENT", "ESSENTIAL_SPEND", "EXPENSES", "FAMILY", "FITNESS", "FUEL", "GAMBLING", "GAMING", "GARDEN", "GENERAL", "GIFTS", "GROCERIES", "HOBBY", "HOLIDAYS", "HOME", "IMPULSE_BUY", "INCOME", "INSURANCE", "INVESTMENTS", "LIFESTYLE", "MAINTENANCE_AND_REPAIRS", "MEDICAL", "MORTGAGE", "NON_ESSENTIAL_SPEND", "PAYMENTS", "PERSONAL_CARE", "PERSONAL_TRANSFERS", "PETS", "PROJECTS", "RELATIONSHIPS", "RENT", "SAVING", "SHOPPING", "SUBSCRIPTIONS", "TAKEAWAY", "TAXI", "TRANSPORT", "TREATS", "WEDDING", "WELLBEING", "NONE", "REVENUE", "OTHER_INCOME", "CLIENT_REFUNDS", "INVENTORY", "STAFF", "TRAVEL", "WORKPLACE", "REPAIRS_AND_MAINTENANCE", "ADMIN", "MARKETING", "BUSINESS_ENTERTAINMENT", "INTEREST_PAYMENTS", "BANK_CHARGES", "OTHER", "FOOD_AND_DRINK", "EQUIPMENT", "PROFESSIONAL_SERVICES", "PHONE_AND_INTERNET", "VEHICLES", "DIRECTORS_WAGES", "VAT", "CORPORATION_TAX", "SELF_ASSESSMENT_TAX", "INVESTMENT_CAPITAL", "TRANSFERS", "LOAN_PRINCIPAL", "PERSONAL", "DIVIDENDS" ]
          }
        },
        "description" : "Response object for payment order queries"
      },
      "PaymentOrderPayment" : {
        "required" : [ "amount", "createdAt", "payeeAccountUid", "payeeUid", "paymentUid", "reference" ],
        "type" : "object",
        "properties" : {
          "paymentUid" : {
            "type" : "string",
            "description" : "UID of this payment",
            "format" : "uuid",
            "example" : "44554455-4455-4455-4455-445544554455"
          },
          "amount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "reference" : {
            "type" : "string",
            "description" : "Reference of this payment",
            "example" : "Payment reference"
          },
          "payeeUid" : {
            "type" : "string",
            "description" : "The ID of the payee receiving this payment",
            "format" : "uuid",
            "example" : "55665566-5566-5566-5566-556655665566"
          },
          "payeeAccountUid" : {
            "type" : "string",
            "description" : "The account ID of the payee account receiving this payment",
            "format" : "uuid",
            "example" : "66776677-6677-6677-6677-667766776677"
          },
          "createdAt" : {
            "type" : "string",
            "description" : "When this payment was created",
            "format" : "date-time"
          },
          "completedAt" : {
            "type" : "string",
            "description" : "When this payment was completed, if it completed",
            "format" : "date-time"
          },
          "rejectedAt" : {
            "type" : "string",
            "description" : "When this payment was rejected, if it was rejected",
            "format" : "date-time"
          },
          "paymentStatusDetails" : {
            "$ref" : "#/components/schemas/PaymentStatusDetails"
          }
        },
        "description" : "Response object for payment order payments queries"
      },
      "PaymentOrderPaymentsResponse" : {
        "required" : [ "payments" ],
        "type" : "object",
        "properties" : {
          "payments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PaymentOrderPayment"
            }
          }
        },
        "description" : "List of payments associated with a payment order"
      },
      "PaymentStatusDetails" : {
        "type" : "object",
        "properties" : {
          "paymentStatus" : {
            "type" : "string",
            "enum" : [ "ACCEPTED", "REJECTED", "PENDING" ]
          },
          "description" : {
            "type" : "string",
            "enum" : [ "ACCEPTED", "QUALIFIED_ACCEPT_WITHIN_TWO_HOURS", "QUALIFIED_ACCEPT_UNSPECIFIED_DAY", "QUALIFIED_ACCEPT_SAME_DAY", "QUALIFIED_ACCEPT_NEXT_CALENDAR_DAY", "QUALIFIED_ACCEPT_NEXT_WORKING_DAY", "QUALIFIED_ACCEPT_AFTER_NEXT_WORKING_DAY", "DESTINATION_ACCOUNT_INVALID", "DESTINATION_ACCOUNT_NAME_MISMATCH", "REFERENCE_INFORMATION_INCORRECT", "DESTINATION_ACCOUNT_UNAVAILABLE", "PENDING" ]
          }
        },
        "description" : "Status details of a payment"
      },
      "StandingOrder" : {
        "type" : "object",
        "properties" : {
          "paymentOrderUid" : {
            "type" : "string",
            "description" : "UID of this payment order",
            "format" : "uuid",
            "example" : "33443344-3344-3344-3344-334433443344"
          },
          "amount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "reference" : {
            "type" : "string",
            "description" : "The reference set by the payer",
            "example" : "Payment reference"
          },
          "payeeUid" : {
            "type" : "string",
            "description" : "The ID of the payee receiving the payments",
            "format" : "uuid",
            "example" : "55665566-5566-5566-5566-556655665566"
          },
          "payeeAccountUid" : {
            "type" : "string",
            "description" : "The account ID of the payee account receiving the payments",
            "format" : "uuid",
            "example" : "66776677-6677-6677-6677-667766776677"
          },
          "standingOrderRecurrence" : {
            "$ref" : "#/components/schemas/StandingOrderRecurrence"
          },
          "nextDate" : {
            "type" : "string",
            "description" : "Date on which the next standing order payment will be made",
            "format" : "date",
            "example" : "2023-01-01"
          },
          "cancelledAt" : {
            "type" : "string",
            "description" : "The time the standing order is cancelled at",
            "format" : "date-time",
            "example" : "2017-07-05T18:27:02.335Z"
          },
          "updatedAt" : {
            "type" : "string",
            "description" : "The time the standing order is updated at",
            "format" : "date-time",
            "example" : "2017-07-05T18:27:02.335Z"
          },
          "spendingCategory" : {
            "type" : "string",
            "description" : "The category of a transaction",
            "nullable" : true,
            "enum" : [ "BIKE", "BILLS_AND_SERVICES", "BUCKET_LIST", "CAR", "CASH", "CELEBRATION", "CHARITY", "CHILDREN", "CLOTHES", "COFFEE", "DEBT_REPAYMENT", "DIY", "DRINKS", "EATING_OUT", "EDUCATION", "EMERGENCY", "ENTERTAINMENT", "ESSENTIAL_SPEND", "EXPENSES", "FAMILY", "FITNESS", "FUEL", "GAMBLING", "GAMING", "GARDEN", "GENERAL", "GIFTS", "GROCERIES", "HOBBY", "HOLIDAYS", "HOME", "IMPULSE_BUY", "INCOME", "INSURANCE", "INVESTMENTS", "LIFESTYLE", "MAINTENANCE_AND_REPAIRS", "MEDICAL", "MORTGAGE", "NON_ESSENTIAL_SPEND", "PAYMENTS", "PERSONAL_CARE", "PERSONAL_TRANSFERS", "PETS", "PROJECTS", "RELATIONSHIPS", "RENT", "SAVING", "SHOPPING", "SUBSCRIPTIONS", "TAKEAWAY", "TAXI", "TRANSPORT", "TREATS", "WEDDING", "WELLBEING", "NONE", "REVENUE", "OTHER_INCOME", "CLIENT_REFUNDS", "INVENTORY", "STAFF", "TRAVEL", "WORKPLACE", "REPAIRS_AND_MAINTENANCE", "ADMIN", "MARKETING", "BUSINESS_ENTERTAINMENT", "INTEREST_PAYMENTS", "BANK_CHARGES", "OTHER", "FOOD_AND_DRINK", "EQUIPMENT", "PROFESSIONAL_SERVICES", "PHONE_AND_INTERNET", "VEHICLES", "DIRECTORS_WAGES", "VAT", "CORPORATION_TAX", "SELF_ASSESSMENT_TAX", "INVESTMENT_CAPITAL", "TRANSFERS", "LOAN_PRINCIPAL", "PERSONAL", "DIVIDENDS" ]
          },
          "categoryUid" : {
            "type" : "string",
            "description" : "The category ID of the category from which the payment will be sent",
            "format" : "uuid",
            "example" : "11771177-1177-1177-1177-117711771177"
          }
        },
        "description" : "Response object for standing order queries"
      },
      "NextPaymentDatesResponse" : {
        "type" : "object",
        "properties" : {
          "nextPaymentDates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "date",
              "example" : "2023-01-01"
            }
          }
        },
        "description" : "List of next payment dates of a standing order"
      },
      "StandingOrdersResponse" : {
        "type" : "object",
        "properties" : {
          "standingOrders" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StandingOrder"
            }
          }
        },
        "description" : "List of standing orders associated to an account holder"
      },
      "InstructLocalPaymentResponse" : {
        "type" : "object",
        "properties" : {
          "paymentOrderUid" : {
            "type" : "string",
            "description" : "The uid of the payment order created by the instruction. N.B. this will not be the uid of any payment which is created by the payment order",
            "format" : "uuid",
            "example" : "33443344-3344-3344-3344-334433443344"
          }
        },
        "description" : "Response after attempting to create a local payment"
      },
      "InstructLocalPaymentRequest" : {
        "required" : [ "amount", "externalIdentifier", "reference" ],
        "type" : "object",
        "properties" : {
          "externalIdentifier" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier for the payment request, generated by you. Must be unique for each payment request you create",
            "example" : "Unique identifier to ensure idempotency"
          },
          "destinationPayeeAccountUid" : {
            "type" : "string",
            "description" : "The desired payment recipient. Either paymentRecipient or destinationPayeeAccountUid must be present",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          },
          "paymentRecipient" : {
            "$ref" : "#/components/schemas/PaymentRecipient"
          },
          "reference" : {
            "pattern" : "[a-zA-Z0-9-/?:().,+#=!%&*<>;{@ \"']{1,35}",
            "type" : "string",
            "description" : "The payment reference. The 35 character limit applies to SEPA payments (Euro accounts). For FPS payments (GBP accounts), the limit is 18 characters",
            "example" : "December Expenses"
          },
          "amount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "spendingCategory" : {
            "type" : "string",
            "description" : "The category of a transaction",
            "enum" : [ "BIKE", "BILLS_AND_SERVICES", "BUCKET_LIST", "CAR", "CASH", "CELEBRATION", "CHARITY", "CHILDREN", "CLOTHES", "COFFEE", "DEBT_REPAYMENT", "DIY", "DRINKS", "EATING_OUT", "EDUCATION", "EMERGENCY", "ENTERTAINMENT", "ESSENTIAL_SPEND", "EXPENSES", "FAMILY", "FITNESS", "FUEL", "GAMBLING", "GAMING", "GARDEN", "GENERAL", "GIFTS", "GROCERIES", "HOBBY", "HOLIDAYS", "HOME", "IMPULSE_BUY", "INCOME", "INSURANCE", "INVESTMENTS", "LIFESTYLE", "MAINTENANCE_AND_REPAIRS", "MEDICAL", "MORTGAGE", "NON_ESSENTIAL_SPEND", "PAYMENTS", "PERSONAL_CARE", "PERSONAL_TRANSFERS", "PETS", "PROJECTS", "RELATIONSHIPS", "RENT", "SAVING", "SHOPPING", "SUBSCRIPTIONS", "TAKEAWAY", "TAXI", "TRANSPORT", "TREATS", "WEDDING", "WELLBEING", "NONE", "REVENUE", "OTHER_INCOME", "CLIENT_REFUNDS", "INVENTORY", "STAFF", "TRAVEL", "WORKPLACE", "REPAIRS_AND_MAINTENANCE", "ADMIN", "MARKETING", "BUSINESS_ENTERTAINMENT", "INTEREST_PAYMENTS", "BANK_CHARGES", "OTHER", "FOOD_AND_DRINK", "EQUIPMENT", "PROFESSIONAL_SERVICES", "PHONE_AND_INTERNET", "VEHICLES", "DIRECTORS_WAGES", "VAT", "CORPORATION_TAX", "SELF_ASSESSMENT_TAX", "INVESTMENT_CAPITAL", "TRANSFERS", "LOAN_PRINCIPAL", "PERSONAL", "DIVIDENDS" ]
          }
        },
        "description" : "Request to make a local payment"
      },
      "UpdateStandingOrderResponse" : {
        "type" : "object",
        "properties" : {
          "paymentOrderUid" : {
            "type" : "string",
            "description" : "The uid of the updated payment order created by the standing order. N.B. this will not be the uid of any payment which is created by the standing order. If the recurrence rule is updated, this payment order uid will be different from the original one",
            "format" : "uuid",
            "example" : "33443344-3344-3344-3344-334433443344"
          }
        },
        "description" : "Response after attempting to update a standing order"
      },
      "UpdateStandingOrderRequest" : {
        "required" : [ "amount", "paymentOrderUid", "reference", "standingOrderRecurrence" ],
        "type" : "object",
        "properties" : {
          "paymentOrderUid" : {
            "type" : "string",
            "description" : "UID of this payment order",
            "format" : "uuid",
            "example" : "33443344-3344-3344-3344-334433443344"
          },
          "reference" : {
            "maxLength" : 18,
            "minLength" : 1,
            "pattern" : "[a-zA-Z0-9-/?:().,+#=!%&*<>;{@ \"']{1,18}",
            "type" : "string",
            "description" : "The payment reference",
            "example" : "Payment reference"
          },
          "amount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "standingOrderRecurrence" : {
            "$ref" : "#/components/schemas/StandingOrderRecurrence"
          },
          "spendingCategory" : {
            "type" : "string",
            "description" : "The category of a transaction",
            "enum" : [ "BIKE", "BILLS_AND_SERVICES", "BUCKET_LIST", "CAR", "CASH", "CELEBRATION", "CHARITY", "CHILDREN", "CLOTHES", "COFFEE", "DEBT_REPAYMENT", "DIY", "DRINKS", "EATING_OUT", "EDUCATION", "EMERGENCY", "ENTERTAINMENT", "ESSENTIAL_SPEND", "EXPENSES", "FAMILY", "FITNESS", "FUEL", "GAMBLING", "GAMING", "GARDEN", "GENERAL", "GIFTS", "GROCERIES", "HOBBY", "HOLIDAYS", "HOME", "IMPULSE_BUY", "INCOME", "INSURANCE", "INVESTMENTS", "LIFESTYLE", "MAINTENANCE_AND_REPAIRS", "MEDICAL", "MORTGAGE", "NON_ESSENTIAL_SPEND", "PAYMENTS", "PERSONAL_CARE", "PERSONAL_TRANSFERS", "PETS", "PROJECTS", "RELATIONSHIPS", "RENT", "SAVING", "SHOPPING", "SUBSCRIPTIONS", "TAKEAWAY", "TAXI", "TRANSPORT", "TREATS", "WEDDING", "WELLBEING", "NONE", "REVENUE", "OTHER_INCOME", "CLIENT_REFUNDS", "INVENTORY", "STAFF", "TRAVEL", "WORKPLACE", "REPAIRS_AND_MAINTENANCE", "ADMIN", "MARKETING", "BUSINESS_ENTERTAINMENT", "INTEREST_PAYMENTS", "BANK_CHARGES", "OTHER", "FOOD_AND_DRINK", "EQUIPMENT", "PROFESSIONAL_SERVICES", "PHONE_AND_INTERNET", "VEHICLES", "DIRECTORS_WAGES", "VAT", "CORPORATION_TAX", "SELF_ASSESSMENT_TAX", "INVESTMENT_CAPITAL", "TRANSFERS", "LOAN_PRINCIPAL", "PERSONAL", "DIVIDENDS" ]
          }
        },
        "description" : "Request to update a standing order"
      },
      "PayeeCreationResponse" : {
        "type" : "object",
        "properties" : {
          "payeeUid" : {
            "type" : "string",
            "description" : "The newly created payee unique identifier, only present on successful payee creation",
            "example" : "55665566-5566-5566-5566-556655665566"
          },
          "success" : {
            "type" : "boolean",
            "description" : "True if the method completed successfully",
            "example" : true
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          }
        },
        "description" : "Response after attempting to create a payee"
      },
      "PayeeAccountCreationRequest" : {
        "required" : [ "accountIdentifier", "bankIdentifier", "bankIdentifierType", "countryCode", "defaultAccount", "description" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string",
            "description" : "Account description",
            "example" : "Bob's business account"
          },
          "defaultAccount" : {
            "type" : "boolean",
            "description" : "Is this the default account for the owning payee",
            "example" : true
          },
          "countryCode" : {
            "type" : "string",
            "description" : "The country code for the account (ISO 3166-1 alpha-2)",
            "example" : "GB"
          },
          "accountIdentifier" : {
            "maxLength" : 34,
            "minLength" : 0,
            "type" : "string",
            "description" : "The account identifier",
            "example" : "12345678"
          },
          "bankIdentifier" : {
            "maxLength" : 34,
            "minLength" : 0,
            "type" : "string",
            "description" : "The bank identifier",
            "example" : "123456"
          },
          "bankIdentifierType" : {
            "type" : "string",
            "description" : "The bank identifier type",
            "example" : "SORT_CODE",
            "enum" : [ "SORT_CODE", "SWIFT", "IBAN", "ABA", "ABA_WIRE", "ABA_ACH", "BSB" ]
          },
          "secondaryIdentifier" : {
            "type" : "string",
            "description" : "Secondary reference data (SRD), if applicable"
          }
        },
        "description" : "Request to create a payee account"
      },
      "PayeeCreationRequest" : {
        "required" : [ "payeeName", "payeeType" ],
        "type" : "object",
        "properties" : {
          "payeeName" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string",
            "description" : "Name",
            "example" : "Bob Bobbington"
          },
          "phoneNumber" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Phone number",
            "example" : "+447700900123"
          },
          "payeeType" : {
            "type" : "string",
            "example" : "INDIVIDUAL",
            "enum" : [ "BUSINESS", "INDIVIDUAL" ]
          },
          "firstName" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string",
            "description" : "First name",
            "example" : "Bob"
          },
          "middleName" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string",
            "description" : "Middle name",
            "example" : "Bobity"
          },
          "lastName" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string",
            "description" : "Last name",
            "example" : "Bobbington"
          },
          "businessName" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string",
            "description" : "Business name",
            "example" : "Trotters Independent Traders"
          },
          "dateOfBirth" : {
            "type" : "string",
            "description" : "Date of birth for this payee",
            "format" : "date",
            "example" : "2023-01-01"
          },
          "accounts" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "type" : "array",
            "description" : "List of accounts for this payee",
            "items" : {
              "$ref" : "#/components/schemas/PayeeAccountCreationRequest"
            }
          }
        },
        "description" : "Request to create a payee"
      },
      "PayeeAccountCreationResponse" : {
        "type" : "object",
        "properties" : {
          "payeeAccountUid" : {
            "type" : "string",
            "description" : "The newly created payee unique identifier, only present on successful payee account creation",
            "example" : "66776677-6677-6677-6677-667766776677"
          },
          "success" : {
            "type" : "boolean",
            "description" : "True if the method completed successfully",
            "example" : true
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          }
        },
        "description" : "Response after attempting to create a payee account"
      },
      "Payee" : {
        "required" : [ "payeeName", "payeeType", "payeeUid" ],
        "type" : "object",
        "properties" : {
          "payeeUid" : {
            "type" : "string",
            "description" : "The uid of this payee",
            "format" : "uuid",
            "example" : "55665566-5566-5566-5566-556655665566"
          },
          "payeeName" : {
            "type" : "string",
            "description" : "Name",
            "example" : "Bob Bobbington"
          },
          "phoneNumber" : {
            "type" : "string",
            "description" : "Phone number",
            "example" : "+447700900123"
          },
          "payeeType" : {
            "type" : "string",
            "description" : "INDIVIDUAL",
            "enum" : [ "BUSINESS", "INDIVIDUAL" ]
          },
          "firstName" : {
            "type" : "string",
            "description" : "First name",
            "example" : "Bob"
          },
          "middleName" : {
            "type" : "string",
            "description" : "Middle name",
            "example" : "Bobity"
          },
          "lastName" : {
            "type" : "string",
            "description" : "Last name",
            "example" : "Bobbington"
          },
          "businessName" : {
            "type" : "string",
            "description" : "Business name",
            "example" : "Trotters Independent Traders"
          },
          "dateOfBirth" : {
            "type" : "string",
            "description" : "Date of birth",
            "format" : "date",
            "example" : "1990-11-30"
          },
          "accounts" : {
            "type" : "array",
            "description" : "Accounts for this payee",
            "items" : {
              "$ref" : "#/components/schemas/PayeeAccount"
            }
          }
        },
        "description" : "A saved payee"
      },
      "PayeeAccount" : {
        "required" : [ "countryCode", "description", "payeeAccountUid", "payeeChannelType" ],
        "type" : "object",
        "properties" : {
          "payeeAccountUid" : {
            "type" : "string",
            "description" : "The uid of this payee account",
            "format" : "uuid",
            "example" : "66776677-6677-6677-6677-667766776677"
          },
          "payeeChannelType" : {
            "type" : "string",
            "description" : "The channel through which the payee was added",
            "example" : "SETTLE_UP",
            "enum" : [ "BANK_ACCOUNT", "SETTLE_UP", "NEARBY" ]
          },
          "description" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Account description",
            "example" : "Bob's business account"
          },
          "defaultAccount" : {
            "type" : "boolean",
            "description" : "Is this the default account for the owning payee",
            "example" : true
          },
          "countryCode" : {
            "type" : "string",
            "description" : "The country code for the account (ISO 3166-1 alpha-2)",
            "example" : "GB",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "XX", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "accountIdentifier" : {
            "type" : "string",
            "description" : "The account identifier",
            "example" : "12345678"
          },
          "bankIdentifier" : {
            "type" : "string",
            "description" : "The bank identifier",
            "example" : "123456"
          },
          "bankIdentifierType" : {
            "type" : "string",
            "description" : "The bank identifier type",
            "example" : "SORT_CODE",
            "enum" : [ "SORT_CODE", "SWIFT", "IBAN", "ABA", "ABA_WIRE", "ABA_ACH", "BSB" ]
          },
          "secondaryIdentifier" : {
            "type" : "string",
            "description" : "Secondary reference data (SRD), if applicable"
          },
          "lastReferences" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "An account of a payee"
      },
      "Payees" : {
        "type" : "object",
        "properties" : {
          "payees" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Payee"
            }
          }
        },
        "description" : "The payees of an account holder"
      },
      "RecurrenceRule" : {
        "required" : [ "frequency", "startDate" ],
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-01-01"
          },
          "frequency" : {
            "type" : "string",
            "enum" : [ "SECONDLY", "MINUTELY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "YEARLY", "MILLENNIALY", "WORKING_DAILY", "SCOTTISH_QUARTERLY", "ENGLISH_QUARTERLY", "RECEIVED_QUARTERLY" ]
          },
          "interval" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "count" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "untilDate" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-01-01"
          },
          "weekStart" : {
            "type" : "string",
            "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
          },
          "days" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
            }
          },
          "monthDay" : {
            "maximum" : 31,
            "minimum" : -5,
            "type" : "integer",
            "format" : "int32"
          },
          "monthWeek" : {
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "How often is the payment made"
      },
      "ScheduledPayment" : {
        "type" : "object",
        "properties" : {
          "accountHolderUid" : {
            "type" : "string",
            "description" : "Unique identifier for account holder",
            "format" : "uuid",
            "example" : "33443344-3344-3344-3344-334433443344"
          },
          "paymentOrderUid" : {
            "type" : "string",
            "description" : "Unique identifier of the scheduled payment order",
            "format" : "uuid",
            "example" : "7879c4f0-8dde-11ea-bc55-0242ac130003"
          },
          "categoryUid" : {
            "type" : "string",
            "description" : "Unique identifier of the category from which the payment will be taken",
            "format" : "uuid",
            "example" : "8f72aaaa-8dde-11ea-bc55-0242ac130003"
          },
          "nextPaymentAmount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "reference" : {
            "type" : "string",
            "description" : "Payment order reference"
          },
          "payeeUid" : {
            "type" : "string",
            "description" : "Unique identifier of the payee",
            "format" : "uuid",
            "example" : "2dcf1551-0b96-4656-9ca5-1195b09d4fb6"
          },
          "payeeAccountUid" : {
            "type" : "string",
            "description" : "Unique identifier of the payee account",
            "format" : "uuid",
            "example" : "288299fd-2428-42b3-8056-afff573b7d9f"
          },
          "recipientName" : {
            "type" : "string",
            "description" : "Recipient name",
            "nullable" : true
          },
          "recurrenceRule" : {
            "$ref" : "#/components/schemas/RecurrenceRule"
          },
          "startDate" : {
            "type" : "string",
            "description" : "Date when the payment order has been created",
            "format" : "date",
            "example" : "2023-01-01"
          },
          "nextDate" : {
            "type" : "string",
            "description" : "Date of the next payment order",
            "format" : "date",
            "example" : "2023-01-01"
          },
          "endDate" : {
            "type" : "string",
            "description" : "Date when payment order ends",
            "format" : "date",
            "example" : "2023-01-01"
          },
          "paymentType" : {
            "type" : "string",
            "description" : "Payment type",
            "example" : "DIRECT_DEBIT",
            "enum" : [ "DIRECT_DEBIT", "STANDING_ORDER", "INTERNAL_TRANSFER" ]
          },
          "spendingCategory" : {
            "type" : "string",
            "description" : "The category of a transaction",
            "example" : "GENERAL",
            "enum" : [ "BIKE", "BILLS_AND_SERVICES", "BUCKET_LIST", "CAR", "CASH", "CELEBRATION", "CHARITY", "CHILDREN", "CLOTHES", "COFFEE", "DEBT_REPAYMENT", "DIY", "DRINKS", "EATING_OUT", "EDUCATION", "EMERGENCY", "ENTERTAINMENT", "ESSENTIAL_SPEND", "EXPENSES", "FAMILY", "FITNESS", "FUEL", "GAMBLING", "GAMING", "GARDEN", "GENERAL", "GIFTS", "GROCERIES", "HOBBY", "HOLIDAYS", "HOME", "IMPULSE_BUY", "INCOME", "INSURANCE", "INVESTMENTS", "LIFESTYLE", "MAINTENANCE_AND_REPAIRS", "MEDICAL", "MORTGAGE", "NON_ESSENTIAL_SPEND", "PAYMENTS", "PERSONAL_CARE", "PERSONAL_TRANSFERS", "PETS", "PROJECTS", "RELATIONSHIPS", "RENT", "SAVING", "SHOPPING", "SUBSCRIPTIONS", "TAKEAWAY", "TAXI", "TRANSPORT", "TREATS", "WEDDING", "WELLBEING", "NONE", "REVENUE", "OTHER_INCOME", "CLIENT_REFUNDS", "INVENTORY", "STAFF", "TRAVEL", "WORKPLACE", "REPAIRS_AND_MAINTENANCE", "ADMIN", "MARKETING", "BUSINESS_ENTERTAINMENT", "INTEREST_PAYMENTS", "BANK_CHARGES", "OTHER", "FOOD_AND_DRINK", "EQUIPMENT", "PROFESSIONAL_SERVICES", "PHONE_AND_INTERNET", "VEHICLES", "DIRECTORS_WAGES", "VAT", "CORPORATION_TAX", "SELF_ASSESSMENT_TAX", "INVESTMENT_CAPITAL", "TRANSFERS", "LOAN_PRINCIPAL", "PERSONAL", "DIVIDENDS" ]
          }
        },
        "description" : "Response object for scheduled payments queries"
      },
      "ScheduledPaymentResponse" : {
        "type" : "object",
        "properties" : {
          "scheduledPayments" : {
            "type" : "array",
            "description" : "List of scheduled payments for a payee account",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledPayment"
            }
          }
        }
      },
      "PayeePayment" : {
        "type" : "object",
        "properties" : {
          "paymentUid" : {
            "type" : "string",
            "description" : "Unique identifier of the payment",
            "format" : "uuid",
            "example" : "55665566-5566-5566-5566-556655665566"
          },
          "amount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "reference" : {
            "type" : "string",
            "description" : "Payment reference",
            "example" : "Rent"
          },
          "createdAt" : {
            "type" : "string",
            "description" : "Date when payment was created",
            "format" : "date-time"
          },
          "spendingCategory" : {
            "type" : "string",
            "description" : "The category of a transaction",
            "example" : "HOME",
            "enum" : [ "BIKE", "BILLS_AND_SERVICES", "BUCKET_LIST", "CAR", "CASH", "CELEBRATION", "CHARITY", "CHILDREN", "CLOTHES", "COFFEE", "DEBT_REPAYMENT", "DIY", "DRINKS", "EATING_OUT", "EDUCATION", "EMERGENCY", "ENTERTAINMENT", "ESSENTIAL_SPEND", "EXPENSES", "FAMILY", "FITNESS", "FUEL", "GAMBLING", "GAMING", "GARDEN", "GENERAL", "GIFTS", "GROCERIES", "HOBBY", "HOLIDAYS", "HOME", "IMPULSE_BUY", "INCOME", "INSURANCE", "INVESTMENTS", "LIFESTYLE", "MAINTENANCE_AND_REPAIRS", "MEDICAL", "MORTGAGE", "NON_ESSENTIAL_SPEND", "PAYMENTS", "PERSONAL_CARE", "PERSONAL_TRANSFERS", "PETS", "PROJECTS", "RELATIONSHIPS", "RENT", "SAVING", "SHOPPING", "SUBSCRIPTIONS", "TAKEAWAY", "TAXI", "TRANSPORT", "TREATS", "WEDDING", "WELLBEING", "NONE", "REVENUE", "OTHER_INCOME", "CLIENT_REFUNDS", "INVENTORY", "STAFF", "TRAVEL", "WORKPLACE", "REPAIRS_AND_MAINTENANCE", "ADMIN", "MARKETING", "BUSINESS_ENTERTAINMENT", "INTEREST_PAYMENTS", "BANK_CHARGES", "OTHER", "FOOD_AND_DRINK", "EQUIPMENT", "PROFESSIONAL_SERVICES", "PHONE_AND_INTERNET", "VEHICLES", "DIRECTORS_WAGES", "VAT", "CORPORATION_TAX", "SELF_ASSESSMENT_TAX", "INVESTMENT_CAPITAL", "TRANSFERS", "LOAN_PRINCIPAL", "PERSONAL", "DIVIDENDS" ]
          },
          "paymentAmount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          }
        },
        "description" : "A sent payment"
      },
      "Payments" : {
        "type" : "object",
        "properties" : {
          "payments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PayeePayment"
            }
          }
        },
        "description" : "List of payments"
      },
      "ConsentInformation" : {
        "type" : "object",
        "description" : "Denotes whether a request has been paused in order for the user to approve it."
      },
      "SavingsGoalTransferResponseV2" : {
        "required" : [ "transferUid" ],
        "type" : "object",
        "properties" : {
          "transferUid" : {
            "type" : "string",
            "description" : "Unique identifier for the transfer",
            "format" : "uuid",
            "example" : "88998899-8899-8899-8899-889988998899"
          },
          "success" : {
            "type" : "boolean",
            "description" : "True if the method completed successfully",
            "example" : true
          }
        },
        "description" : "Response after attempting to make an immediate or recurring transfer into/out of a savings goal."
      },
      "TopUpRequestV2" : {
        "required" : [ "amount" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "reference" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "The reference for the transfer",
            "nullable" : true
          }
        },
        "description" : "Request to make an immediate transfer into a savings goal"
      },
      "RecurrenceRuleV2" : {
        "required" : [ "frequency", "startDate" ],
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-01-01"
          },
          "frequency" : {
            "type" : "string",
            "enum" : [ "DAILY", "WEEKLY", "MONTHLY", "YEARLY" ]
          },
          "interval" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "example" : 2
          },
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "example" : 10
          },
          "untilDate" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-01-01"
          },
          "days" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string",
              "nullable" : true,
              "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
            }
          }
        },
        "description" : "The schedule definition"
      },
      "ScheduledSavingsPaymentRequestV2" : {
        "required" : [ "amount", "recurrenceRule" ],
        "type" : "object",
        "properties" : {
          "recurrenceRule" : {
            "$ref" : "#/components/schemas/RecurrenceRuleV2"
          },
          "amount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "topUp" : {
            "type" : "boolean",
            "description" : "If the payment is a top up or not"
          },
          "reference" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "The reference used on each occasion",
            "nullable" : true
          }
        },
        "description" : "Request to create scheduled payment into a savings goal"
      },
      "CreateOrUpdateSavingsGoalResponseV2" : {
        "type" : "object",
        "properties" : {
          "savingsGoalUid" : {
            "type" : "string",
            "description" : "Unique identifier of the savings goal",
            "format" : "uuid",
            "example" : "77887788-7788-7788-7788-778877887788"
          },
          "success" : {
            "type" : "boolean",
            "description" : "True if the method completed successfully",
            "example" : true
          }
        },
        "description" : "Response after attempting to create a savings goal"
      },
      "SavingsGoalRequestV2" : {
        "required" : [ "currency", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Name of the savings goal",
            "example" : "Trip to Paris"
          },
          "currency" : {
            "maxLength" : 3,
            "minLength" : 3,
            "type" : "string",
            "description" : "ISO-4217 3 character currency code of the savings goal",
            "example" : "GBP"
          },
          "target" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "base64EncodedPhoto" : {
            "type" : "string",
            "description" : "A text (base 64) encoded picture to associate with the savings goal"
          }
        },
        "description" : "Request to create a new savings goal"
      },
      "ScheduledSavingsPaymentV2" : {
        "required" : [ "currencyAndAmount", "nextPaymentDate", "recurrenceRule", "transferUid" ],
        "type" : "object",
        "properties" : {
          "transferUid" : {
            "type" : "string",
            "description" : "Unique identifier of the transfer",
            "format" : "uuid",
            "example" : "88998899-8899-8899-8899-889988998899"
          },
          "recurrenceRule" : {
            "$ref" : "#/components/schemas/RecurrenceRuleV2"
          },
          "currencyAndAmount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "nextPaymentDate" : {
            "type" : "string",
            "description" : "The next date the payment will be made on",
            "format" : "date",
            "example" : "2023-01-01"
          },
          "reference" : {
            "type" : "string",
            "description" : "The reference on each transfer",
            "nullable" : true
          }
        },
        "description" : "A transfer into a savings goal that can happen once in the future or have multiple payments with same frequency"
      },
      "SavingsGoalV2" : {
        "required" : [ "state" ],
        "type" : "object",
        "properties" : {
          "savingsGoalUid" : {
            "type" : "string",
            "description" : "Unique identifier of the savings goal",
            "format" : "uuid",
            "example" : "77887788-7788-7788-7788-778877887788"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the savings goal",
            "example" : "Trip to Paris"
          },
          "target" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "totalSaved" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "savedPercentage" : {
            "type" : "integer",
            "description" : "Percentage of target currently deposited in the savings goal",
            "format" : "int32",
            "example" : 100
          },
          "state" : {
            "type" : "string",
            "description" : "The state of the savings goal",
            "example" : "ACTIVE",
            "enum" : [ "CREATING", "ACTIVE", "ARCHIVING", "ARCHIVED", "RESTORING", "PENDING" ]
          }
        },
        "description" : "A goal defined by an account holder to hold savings"
      },
      "SavingsGoalPhotoV2" : {
        "required" : [ "base64EncodedPhoto" ],
        "type" : "object",
        "properties" : {
          "base64EncodedPhoto" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "A text (base 64) encoded picture to associate with the savings goal"
          }
        },
        "description" : "A photo associated to a savings goal"
      },
      "SavingsGoalsV2" : {
        "required" : [ "savingsGoalList" ],
        "type" : "object",
        "properties" : {
          "savingsGoalList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsGoalV2"
            }
          }
        },
        "description" : "A list containing all savings goals for account holder"
      },
      "WithdrawalRequestV2" : {
        "required" : [ "amount" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "reference" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "The reference for the withdrawal from a savings goal.",
            "nullable" : true
          }
        },
        "description" : "Request to withdraw money from a savings goal."
      },
      "SettleUpProfile" : {
        "required" : [ "settleUpLink", "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status",
            "example" : "ACTIVE",
            "enum" : [ "ACTIVE", "INACTIVE", "CLOSED" ]
          },
          "starlingPayLink" : {
            "type" : "string",
            "writeOnly" : true
          },
          "settleUpLink" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Settle Up link",
            "example" : "https://settleup.starlingbank.com/amanda.hanks"
          }
        }
      },
      "SpacePhoto" : {
        "required" : [ "base64EncodedPhoto" ],
        "type" : "object",
        "properties" : {
          "base64EncodedPhoto" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "A text (base 64) encoded picture to associate with the space"
          }
        },
        "description" : "A photo associated to a space"
      },
      "SavingsGoalOrdered" : {
        "required" : [ "state" ],
        "type" : "object",
        "properties" : {
          "savingsGoalUid" : {
            "type" : "string",
            "description" : "Unique identifier of the savings goal",
            "format" : "uuid",
            "example" : "77887788-7788-7788-7788-778877887788"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the savings goal",
            "example" : "Trip to Paris"
          },
          "target" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "totalSaved" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "savedPercentage" : {
            "type" : "integer",
            "description" : "Percentage of target currently deposited in the savings goal",
            "format" : "int32",
            "example" : 100
          },
          "sortOrder" : {
            "type" : "integer",
            "description" : "Sort Order",
            "format" : "int32"
          },
          "state" : {
            "type" : "string",
            "description" : "The state of the savings goal",
            "example" : "ACTIVE",
            "enum" : [ "CREATING", "ACTIVE", "ARCHIVING", "ARCHIVED", "RESTORING", "PENDING" ]
          }
        },
        "description" : "A goal defined by an account holder to hold savings"
      },
      "Spaces" : {
        "required" : [ "savingsGoals", "spendingSpaces" ],
        "type" : "object",
        "properties" : {
          "savingsGoals" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsGoalOrdered"
            }
          },
          "spendingSpaces" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SpendingSpace"
            }
          }
        },
        "description" : "A list containing all spaces for an account holder"
      },
      "SpendingSpace" : {
        "required" : [ "balance", "cardAssociationUid", "name", "spaceUid", "spendingSpaceType", "state" ],
        "type" : "object",
        "properties" : {
          "uid" : {
            "type" : "string",
            "format" : "uuid",
            "writeOnly" : true,
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          },
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Name of the space",
            "example" : "Shopping"
          },
          "balance" : {
            "$ref" : "#/components/schemas/CurrencyAndAmount"
          },
          "cardAssociationUid" : {
            "type" : "string",
            "description" : "Card Association Uid",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          },
          "sortOrder" : {
            "type" : "integer",
            "description" : "Sort Order",
            "format" : "int32"
          },
          "spendingSpaceType" : {
            "type" : "string",
            "description" : "Spending Space Type",
            "enum" : [ "SHOPPING", "CHILDCARE", "HELPING_OUT", "YOUNG_PERSON", "EXPENSE", "SPARE_CARD", "CHILDCARE_V2", "SHOPPING_V2", "SPARE" ]
          },
          "state" : {
            "type" : "string",
            "description" : "The state of the spending space",
            "example" : "ACTIVE",
            "enum" : [ "CREATING", "ACTIVE", "ARCHIVING", "ARCHIVED", "RESTORING", "PENDING" ]
          },
          "spaceUid" : {
            "type" : "string",
            "description" : "SpendingSpaceUid",
            "format" : "uuid",
            "example" : "aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa"
          }
        }
      }
    },
    "securitySchemes" : {
      "BearerAndSignature" : {
        "type" : "http",
        "scheme" : "bearerAndSignature"
      },
      "Bearer" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}
